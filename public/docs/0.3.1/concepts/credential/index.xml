<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Credential Concepts on Tools for running HashiCorp Vault on Kubernetes</title><link>https://kubedb.com/docs/0.3.1/concepts/credential/</link><description>Recent content in Credential Concepts on Tools for running HashiCorp Vault on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubedb.com/docs/0.3.1/concepts/credential/index.xml" rel="self" type="application/rss+xml"/><item><title>Credential | Pharmer</title><link>https://kubedb.com/docs/0.3.1/concepts/credential/credential/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubedb.com/docs/0.3.1/concepts/credential/credential/</guid><description>Credential For creating cluster pharmer needs cloud provider&amp;rsquo;s credential, so that it can create cluster resources on that provider.
pharmer provides an interactive shell to help user to provider credential information.
Creating $ pharmer create credential -h Create credential object Usage: pharmer create credential [flags] Aliases: credential, credentials, cred, Credential Examples: pharmer create credential Flags: -l, --from-env Load credential data from ENV. -f, --from-file string Load credential data from file -h, --help help for credential -p, --provider string Name of the Cloud provider Global Flags: --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Guard (default true) --config-file string Path to Pharmer config file --env string Environment used to enable debugging (default &amp;quot;dev&amp;quot;) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr (default 2) -v, --v Level log level for V logs --vmodule moduleSpec comma-separated list of pattern=N settings for file-filtered logging To import a cloud provider credential run the following command</description></item></channel></rss>