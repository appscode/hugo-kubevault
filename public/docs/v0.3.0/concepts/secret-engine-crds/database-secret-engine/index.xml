<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Concepts | Database Secret Engine on Tools for running HashiCorp Vault on Kubernetes</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/</link><description>Recent content in Concepts | Database Secret Engine on Tools for running HashiCorp Vault on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/index.xml" rel="self" type="application/rss+xml"/><item><title>DatabaseAccessRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/databaseaccessrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/databaseaccessrequest/</guid><description>New to KubeVault? Please start here.
DatabaseAccessRequest What is DatabaseAccessRequest A DatabaseAccessRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request a Vault server for database credentials in a Kubernetes native way. If DatabaseAccessRequest is approved, then the KubeVault operator will issue credentials and create Kubernetes secret containing credentials. The secret name will be specified in status.secret.name field.
KubeVault operator performs the following operations when a DatabaseAccessRequest CRD is created:</description></item><item><title>MongoDBRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/mongodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/mongodb/</guid><description>New to KubeVault? Please start here.
MongoDBRole What is MongoDBRole A MongoDBRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a MongoDB database secret engine role in a Kubernetes native way.
When a MongoDBRole is created, the KubeVault operator creates a Vault role according to the specification. If the user deletes the MongoDBRole CRD, then the respective role will also be deleted from Vault.</description></item><item><title>MySQLRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/mysql/</guid><description>New to KubeVault? Please start here.
MySQLRole What is MySQLRole A MySQLRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a database secret engine role in a Kubernetes native way.
When a MySQLRole is created, the KubeVault operator creates a role according to the specification. If the user deletes the MySQLRole CRD, then the respective role will also be deleted from Vault.
MySQLRole CRD Specification Like any official Kubernetes resource, a MySQLRole object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>PostgresRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/postgresrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/postgresrole/</guid><description>New to KubeVault? Please start here.
PostgresRole What is PostgresRole A PostgresRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a database secret engine role in a Kubernetes native way.
When a PostgresRole is created, the KubeVault operator creates a role according to specification. If the user deletes the PostgresRole CRD, then the respective role will also be deleted from Vault.
PostgresRole CRD Specification Like any official Kubernetes resource, a PostgresRole object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item></channel></rss>