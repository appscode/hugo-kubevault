<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure | Vault Secret Engine on Tools for running HashiCorp Vault on Kubernetes</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/</link><description>Recent content in Azure | Vault Secret Engine on Tools for running HashiCorp Vault on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>Manage Azure service principals using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/overview/</guid><description>New to KubeVault? Please start here.
Manage Azure service principals using the KubeVault operator The Azure secrets engine dynamically generates Azure service principals and role assignments. Vault roles can be mapped to one or more Azure roles, providing a simple, flexible way to manage the permissions granted to generated service principals. You can easily manage the Azure secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:</description></item><item><title>Mount Azure Secrets into Kubernetes a Pod using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount Azure Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item></channel></rss>