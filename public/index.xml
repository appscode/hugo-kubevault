<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tools for running HashiCorp Vault on Kubernetes</title><link>https://kubevault.com/</link><description>Recent content on Tools for running HashiCorp Vault on Kubernetes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kubevault.com/index.xml" rel="self" type="application/rss+xml"/><item><title>AppBinding | KubeVault Concepts</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/appbinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/appbinding/</guid><description>New to KubeVault? Please start here.
AppBinding CRD AppBinding CRD provides a way to specify connection information, credential and parameters that are necessary for communicating with app/service. In Vault operator, AppBinding used to communicate with vault, database, etc. This also provides flexibility to use external app/service.
apiVersion: appcatalog.appscode.com/v1alpha1 kind: AppBinding metadata: name: vault-app namespace: demo spec: ... AppBinding Spec AppBinding spec contains connection, credential and parameters information.
apiVersion: appcatalog.</description></item><item><title>AppBinding | KubeVault Concepts</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/appbinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/appbinding/</guid><description>New to KubeVault? Please start here.
AppBinding CRD AppBinding CRD provides a way to specify connection information, credential and parameters that are necessary for communicating with app/service. In Vault operator, AppBinding used to communicate with vault, database, etc. This also provides flexibility to use external app/service.
apiVersion: appcatalog.appscode.com/v1alpha1 kind: AppBinding metadata: name: vault-app namespace: demo spec: ... AppBinding Spec AppBinding spec contains connection, credential and parameters information.
apiVersion: appcatalog.</description></item><item><title>AppBinding | KubeVault Concepts</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/appbinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/appbinding/</guid><description>New to KubeVault? Please start here.
AppBinding What is AppBinding AppBinding CRD provides a way to specify connection information, credential, and parameters that are necessary for communicating with an app/service. In KubeVault operator, AppBinding used to communicate with externally provisioned Vault, database, etc.
An AppBinding is a Kubernetes CustomResourceDefinition(CRD) which points to an application using either its URL (usually for a non-Kubernetes resident service instance) or a Kubernetes service object (if self-hosted in a Kubernetes cluster), some optional parameters and a credential secret.</description></item><item><title>AppBinding | KubeVault Concepts</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/appbinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/appbinding/</guid><description>New to KubeVault? Please start here.
AppBinding What is AppBinding AppBinding CRD provides a way to specify connection information, credential, and parameters that are necessary for communicating with an app/service. In KubeVault operator, AppBinding used to communicate with externally provisioned Vault, database, etc.
An AppBinding is a Kubernetes CustomResourceDefinition(CRD) which points to an application using either its URL (usually for a non-Kubernetes resident service instance) or a Kubernetes service object (if self-hosted in a Kubernetes cluster), some optional parameters and a credential secret.</description></item><item><title>AWS KMS | Vault Unsealer</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/aws_kms_ssm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/aws_kms_ssm/</guid><description>New to KubeVault? Please start here.
mode.awsKmsSsm To use awsKmsSsm mode specify mode.awsKmsSsm. In this mode, unseal keys and root token will be stored in AWS System Manager Parameter store and they will be encrypted using AWS encryption key.
spec: unsealer: mode: awsKmsSsm: kmsKeyID: &amp;lt;key_id&amp;gt; region: &amp;lt;region&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; mode.awsKmsSsm has following field:
awsKmsSsm.kmsKeyID awsKmsSsm.kmsKeyID is a required field that specifies the ID or ARN of the AWS KMS key to encrypt values.</description></item><item><title>AWS KMS | Vault Unsealer</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/aws_kms_ssm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/aws_kms_ssm/</guid><description>New to KubeVault? Please start here.
mode.awsKmsSsm To use awsKmsSsm mode specify mode.awsKmsSsm. In this mode, unseal keys and root token will be stored in AWS System Manager Parameter store and they will be encrypted using AWS encryption key.
spec: unsealer: mode: awsKmsSsm: kmsKeyID: &amp;lt;key_id&amp;gt; region: &amp;lt;region&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; mode.awsKmsSsm has following field:
awsKmsSsm.kmsKeyID awsKmsSsm.kmsKeyID is a required field that specifies the ID or ARN of the AWS KMS key to encrypt values.</description></item><item><title>AWS KMS | Vault Unsealer</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/aws_kms_ssm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/aws_kms_ssm/</guid><description>New to KubeVault? Please start here.
mode.awsKmsSsm To use awsKmsSsm mode specify mode.awsKmsSsm. In this mode, unseal keys and root token will be stored in AWS System Manager Parameter store and they will be encrypted using AWS encryption key.
spec: unsealer: mode: awsKmsSsm: kmsKeyID: &amp;lt;key_id&amp;gt; region: &amp;lt;region&amp;gt; ssmKeyPrefix: &amp;lt;key_prefix&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; endpoint: &amp;lt;vcp-endpoint&amp;gt; mode.awsKmsSsm has the following fields:
awsKmsSsm.kmsKeyID awsKmsSsm.kmsKeyID is a required field that specifies the ID or ARN of the AWS KMS key to encrypt values.</description></item><item><title>AWS KMS | Vault Unsealer</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/aws_kms_ssm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/aws_kms_ssm/</guid><description>New to KubeVault? Please start here.
mode.awsKmsSsm To use awsKmsSsm mode specify mode.awsKmsSsm. In this mode, unseal keys and root token will be stored in AWS System Manager Parameter store and they will be encrypted using AWS encryption key.
spec: unsealer: mode: awsKmsSsm: kmsKeyID: &amp;lt;key_id&amp;gt; region: &amp;lt;region&amp;gt; ssmKeyPrefix: &amp;lt;key_prefix&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; endpoint: &amp;lt;vcp-endpoint&amp;gt; mode.awsKmsSsm has the following fields:
awsKmsSsm.kmsKeyID awsKmsSsm.kmsKeyID is a required field that specifies the ID or ARN of the AWS KMS key to encrypt values.</description></item><item><title>AWS S3 | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/s3/</guid><description>New to KubeVault? Please start here.
AWS S3 In S3 storage backend, data will be stored in AWS S3. Vault documentation for S3 storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-s3 namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: s3: bucket: &amp;#34;my-vault-bucket&amp;#34; region: &amp;#34;us-west-1&amp;#34; credentialSecret: &amp;#34;aws-credential&amp;#34; spec.backend.s3 To use S3 as backend storage in Vault specify spec.backend.s3 in VaultServer CRD.
spec: backend: s3: bucket: &amp;lt;bucket_name&amp;gt; endPoint: &amp;lt;end_point&amp;gt; region: &amp;lt;region&amp;gt; credentialSecret: &amp;lt;credential_secret_name&amp;gt; sessionTokenSecret: &amp;lt;session_secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; s3ForcePathStyle: &amp;lt;true/false&amp;gt; disableSSL: &amp;lt;true/false&amp;gt; spec.</description></item><item><title>AWS S3 | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/s3/</guid><description>New to KubeVault? Please start here.
AWS S3 In S3 storage backend, data will be stored in AWS S3. Vault documentation for S3 storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-s3 namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: s3: bucket: &amp;#34;my-vault-bucket&amp;#34; region: &amp;#34;us-west-1&amp;#34; credentialSecret: &amp;#34;aws-credential&amp;#34; spec.backend.s3 To use S3 as backend storage in Vault specify spec.backend.s3 in VaultServer CRD.
spec: backend: s3: bucket: &amp;lt;bucket_name&amp;gt; endPoint: &amp;lt;end_point&amp;gt; region: &amp;lt;region&amp;gt; credentialSecret: &amp;lt;credential_secret_name&amp;gt; sessionTokenSecret: &amp;lt;session_secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; s3ForcePathStyle: &amp;lt;true/false&amp;gt; disableSSL: &amp;lt;true/false&amp;gt; spec.</description></item><item><title>AWS S3 | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/s3/</guid><description>New to KubeVault? Please start here.
AWS S3 In S3 storage backend, Vault data will be stored in AWS S3 bucket. Vault documentation for S3 storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-s3 namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: s3: bucket: &amp;#34;my-vault-bucket&amp;#34; region: &amp;#34;us-west-1&amp;#34; credentialSecret: &amp;#34;aws-credential&amp;#34; spec.backend.s3 To use S3 as backend storage in Vault specify spec.backend.s3 in VaultServer CRD.
spec: backend: s3: bucket: &amp;lt;bucket_name&amp;gt; endpoint: &amp;lt;end_point&amp;gt; region: &amp;lt;region&amp;gt; credentialSecret: &amp;lt;credential_secret_name&amp;gt; sessionTokenSecret: &amp;lt;session_secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; forcePathStyle: &amp;lt;true/false&amp;gt; disableSSL: &amp;lt;true/false&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>AWS S3 | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/s3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/s3/</guid><description>New to KubeVault? Please start here.
AWS S3 In S3 storage backend, Vault data will be stored in AWS S3 bucket. Vault documentation for S3 storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-s3 namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: s3: bucket: &amp;#34;my-vault-bucket&amp;#34; region: &amp;#34;us-west-1&amp;#34; credentialSecret: &amp;#34;aws-credential&amp;#34; spec.backend.s3 To use S3 as backend storage in Vault specify spec.backend.s3 in VaultServer CRD.
spec: backend: s3: bucket: &amp;lt;bucket_name&amp;gt; endpoint: &amp;lt;end_point&amp;gt; region: &amp;lt;region&amp;gt; credentialSecret: &amp;lt;credential_secret_name&amp;gt; sessionTokenSecret: &amp;lt;session_secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; forcePathStyle: &amp;lt;true/false&amp;gt; disableSSL: &amp;lt;true/false&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>AWSAccessKeyRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/0.1.0/concepts/secret-engine-crds/awsaccesskeyrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/secret-engine-crds/awsaccesskeyrequest/</guid><description>New to KubeVault? Please start here.
AWSAccessKeyRequest CRD AWSAccessKeyRequest CRD is to request AWS credential from vault. If AWSAccessKeyRequest is approved, then Vault operator will issue credential from vault and create Kubernetes secret containing credential. The secret name will be specified in status.secret.name field.
apiVersion: engine.kubevault.com/v1alpha1 kind: AWSAccessKeyRequest metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... AWSAccessKeyRequest Spec AWSAccessKeyRequest spec contains information about AWS role and subject.</description></item><item><title>AWSAccessKeyRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/0.2.0/concepts/secret-engine-crds/awsaccesskeyrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/secret-engine-crds/awsaccesskeyrequest/</guid><description>New to KubeVault? Please start here.
AWSAccessKeyRequest CRD AWSAccessKeyRequest CRD is to request AWS credential from vault. If AWSAccessKeyRequest is approved, then Vault operator will issue credential from vault and create Kubernetes secret containing credential. The secret name will be specified in status.secret.name field.
apiVersion: engine.kubevault.com/v1alpha1 kind: AWSAccessKeyRequest metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... AWSAccessKeyRequest Spec AWSAccessKeyRequest spec contains information about AWS role and subject.</description></item><item><title>AWSAccessKeyRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/aws-secret-engine/awsaccesskeyrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/aws-secret-engine/awsaccesskeyrequest/</guid><description>New to KubeVault? Please start here.
AWSAccessKeyRequest What is AWSAccessKeyRequest An AWSAccessKeyRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request for AWS credentials in a Kubernetes native way. If an AWSAccessKeyRequest is approved, then the KubeVault operator will issue credentials using a Vault server and create a Kubernetes secret containing the AWS credentials. The secret name will be specified in status.secret.name field. The operator will also create appropriate ClusterRole and ClusterRoleBinding for the k8s secret.</description></item><item><title>AWSAccessKeyRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/aws-secret-engine/awsaccesskeyrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/aws-secret-engine/awsaccesskeyrequest/</guid><description>New to KubeVault? Please start here.
AWSAccessKeyRequest What is AWSAccessKeyRequest An AWSAccessKeyRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request for AWS credentials in a Kubernetes native way. If an AWSAccessKeyRequest is approved, then the KubeVault operator will issue credentials using a Vault server and create a Kubernetes secret containing the AWS credentials. The secret name will be specified in status.secret.name field. The operator will also create appropriate ClusterRole and ClusterRoleBinding for the k8s secret.</description></item><item><title>AwsRole | Vault Secret Engine</title><link>https://kubevault.com/docs/0.1.0/concepts/secret-engine-crds/awsrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/secret-engine-crds/awsrole/</guid><description>New to KubeVault? Please start here.
AWSRole CRD Vault operator will configure root IAM credentials and create role according to AWSRole CRD (CustomResourceDefinition) specification. If the user deletes the AWSRole CRD, then respective role will also be deleted from Vault.
apiVersion: engine.kubevault.com/v1alpha1 kind: AWSRole metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of the role in Vault will follow this format: k8s.</description></item><item><title>AwsRole | Vault Secret Engine</title><link>https://kubevault.com/docs/0.2.0/concepts/secret-engine-crds/awsrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/secret-engine-crds/awsrole/</guid><description>New to KubeVault? Please start here.
AWSRole CRD Vault operator will configure root IAM credentials and create role according to AWSRole CRD (CustomResourceDefinition) specification. If the user deletes the AWSRole CRD, then respective role will also be deleted from Vault.
apiVersion: engine.kubevault.com/v1alpha1 kind: AWSRole metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of the role in Vault will follow this format: k8s.</description></item><item><title>AwsRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/aws-secret-engine/awsrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/aws-secret-engine/awsrole/</guid><description>New to KubeVault? Please start here.
AWSRole What is AWSRole An AWSRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create AWS secret engine role in a Kubernetes native way.
When an AWSRole is created, the KubeVault operator configures a Vault role that maps to a set of permissions in AWS as well as an AWS credential type. When users generate credentials, they are generated against this role.</description></item><item><title>AwsRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/aws-secret-engine/awsrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/aws-secret-engine/awsrole/</guid><description>New to KubeVault? Please start here.
AWSRole What is AWSRole An AWSRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create AWS secret engine role in a Kubernetes native way.
When an AWSRole is created, the KubeVault operator configures a Vault role that maps to a set of permissions in AWS as well as an AWS credential type. When users generate credentials, they are generated against this role.</description></item><item><title>Azure Key Vault | Vault Unsealer</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/azure_key_vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/azure_key_vault/</guid><description>New to KubeVault? Please start here.
mode.azureKeyVault To use azureKeyVault mode specify mode.azureKeyVault. In this mode, unseal keys and root token will be stored in Azure Key Vault as secret.
spec: unsealer: mode: azureKeyVault: vaultBaseUrl: &amp;lt;vault_base_url&amp;gt; tenantID: &amp;lt;tenant_id&amp;gt; clientCertSecret: &amp;lt;secret_name&amp;gt; aadClientSecret: &amp;lt;secret_name useManagedIdentity: &amp;lt;true/false&amp;gt; cloud: &amp;lt;cloud_environment_identifier&amp;gt; mode.azureKeyVault has following field:
azureKeyVault.vaultBaseUrl azureKeyVault.vaultBaseUrl is a required field that specifies Azure key vault url.
spec: unsealer: mode: azureKeyVault: vaultBaseUrl: &amp;#34;https://myvault.vault.azure.net&amp;#34; azureKeyVault.</description></item><item><title>Azure Key Vault | Vault Unsealer</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/azure_key_vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/azure_key_vault/</guid><description>New to KubeVault? Please start here.
mode.azureKeyVault To use azureKeyVault mode specify mode.azureKeyVault. In this mode, unseal keys and root token will be stored in Azure Key Vault as secret.
spec: unsealer: mode: azureKeyVault: vaultBaseUrl: &amp;lt;vault_base_url&amp;gt; tenantID: &amp;lt;tenant_id&amp;gt; clientCertSecret: &amp;lt;secret_name&amp;gt; aadClientSecret: &amp;lt;secret_name useManagedIdentity: &amp;lt;true/false&amp;gt; cloud: &amp;lt;cloud_environment_identifier&amp;gt; mode.azureKeyVault has following field:
azureKeyVault.vaultBaseUrl azureKeyVault.vaultBaseUrl is a required field that specifies Azure key vault url.
spec: unsealer: mode: azureKeyVault: vaultBaseUrl: &amp;#34;https://myvault.vault.azure.net&amp;#34; azureKeyVault.</description></item><item><title>Azure Key Vault | Vault Unsealer</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/azure_key_vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/azure_key_vault/</guid><description>New to KubeVault? Please start here.
mode.azureKeyVault To use azureKeyVault mode specify mode.azureKeyVault. In this mode, unseal keys and root token will be stored in Azure Key Vault as secret.
spec: unsealer: mode: azureKeyVault: vaultBaseURL: &amp;lt;vault_base_url&amp;gt; tenantID: &amp;lt;tenant_id&amp;gt; clientCertSecret: &amp;lt;secret_name&amp;gt; aadClientSecret: &amp;lt;secret_name useManagedIdentity: &amp;lt;true/false&amp;gt; cloud: &amp;lt;cloud_environment_identifier&amp;gt; mode.azureKeyVault has the following fields:
azureKeyVault.vaultBaseURL azureKeyVault.vaultBaseURL is a required field that specifies the Azure key vault URL.
spec: unsealer: mode: azureKeyVault: vaultBaseURL: &amp;#34;https://myvault.</description></item><item><title>Azure Key Vault | Vault Unsealer</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/azure_key_vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/azure_key_vault/</guid><description>New to KubeVault? Please start here.
mode.azureKeyVault To use azureKeyVault mode specify mode.azureKeyVault. In this mode, unseal keys and root token will be stored in Azure Key Vault as secret.
spec: unsealer: mode: azureKeyVault: vaultBaseURL: &amp;lt;vault_base_url&amp;gt; tenantID: &amp;lt;tenant_id&amp;gt; clientCertSecret: &amp;lt;secret_name&amp;gt; aadClientSecret: &amp;lt;secret_name useManagedIdentity: &amp;lt;true/false&amp;gt; cloud: &amp;lt;cloud_environment_identifier&amp;gt; mode.azureKeyVault has the following fields:
azureKeyVault.vaultBaseURL azureKeyVault.vaultBaseURL is a required field that specifies the Azure key vault URL.
spec: unsealer: mode: azureKeyVault: vaultBaseURL: &amp;#34;https://myvault.</description></item><item><title>Azure | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/azure/</guid><description>New to KubeVault? Please start here.
Azure In Azure storage backend, data will be stored in Azure Storage Container. Vault documentation for azure storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-azure namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: azure: accountName: &amp;#34;vault-ac&amp;#34; accountKeySecret: &amp;#34;azure-cred&amp;#34; container: &amp;#34;my-vault-storage&amp;#34; spec.backend.azure To use Azure as backend storage in Vault specify spec.backend.azure in VaultServer CRD.
spec: backend: azure: accountName: &amp;lt;storage_account_name&amp;gt; accountKeySecret: &amp;lt;storage_account_key_secret_name&amp;gt; container: &amp;lt;container_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; spec.</description></item><item><title>Azure | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/azure/</guid><description>New to KubeVault? Please start here.
Azure In Azure storage backend, data will be stored in Azure Storage Container. Vault documentation for azure storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-azure namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: azure: accountName: &amp;#34;vault-ac&amp;#34; accountKeySecret: &amp;#34;azure-cred&amp;#34; container: &amp;#34;my-vault-storage&amp;#34; spec.backend.azure To use Azure as backend storage in Vault specify spec.backend.azure in VaultServer CRD.
spec: backend: azure: accountName: &amp;lt;storage_account_name&amp;gt; accountKeySecret: &amp;lt;storage_account_key_secret_name&amp;gt; container: &amp;lt;container_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; spec.</description></item><item><title>Azure | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/azure/</guid><description>New to KubeVault? Please start here.
Azure In Azure storage backend, Vault data will be stored in Azure Storage Container. Vault documentation for azure storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-azure namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: azure: accountName: &amp;#34;vault-ac&amp;#34; accountKeySecret: &amp;#34;azure-cred&amp;#34; container: &amp;#34;my-vault-storage&amp;#34; spec.backend.azure To use Azure as backend storage in Vault specify spec.backend.azure in VaultServer CRD.
spec: backend: azure: accountName: &amp;lt;storage_account_name&amp;gt; accountKeySecret: &amp;lt;storage_account_key_secret_name&amp;gt; container: &amp;lt;container_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>Azure | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/azure/</guid><description>New to KubeVault? Please start here.
Azure In Azure storage backend, Vault data will be stored in Azure Storage Container. Vault documentation for azure storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-azure namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: azure: accountName: &amp;#34;vault-ac&amp;#34; accountKeySecret: &amp;#34;azure-cred&amp;#34; container: &amp;#34;my-vault-storage&amp;#34; spec.backend.azure To use Azure as backend storage in Vault specify spec.backend.azure in VaultServer CRD.
spec: backend: azure: accountName: &amp;lt;storage_account_name&amp;gt; accountKeySecret: &amp;lt;storage_account_key_secret_name&amp;gt; container: &amp;lt;container_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>AzureAccessKeyRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/azure-secret-engine/azureaccesskeyrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/azure-secret-engine/azureaccesskeyrequest/</guid><description>New to KubeVault? Please start here.
AzureAccessKeyRequest What is AzureAccessKeyRequest An AzureAccessKeyRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request for Azure credentials in a Kubernetes native way. If an AzureAccessKeyRequest is approved, then the KubeVault operator will issue credentials using a Vault server and create a Kubernetes secret containing the Azure credentials. The secret name will be specified in status.secret.name field. The operator will also create appropriate ClusterRole and ClusterRoleBinding for the k8s secret.</description></item><item><title>AzureAccessKeyRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/azure-secret-engine/azureaccesskeyrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/azure-secret-engine/azureaccesskeyrequest/</guid><description>New to KubeVault? Please start here.
AzureAccessKeyRequest What is AzureAccessKeyRequest An AzureAccessKeyRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request for Azure credentials in a Kubernetes native way. If an AzureAccessKeyRequest is approved, then the KubeVault operator will issue credentials using a Vault server and create a Kubernetes secret containing the Azure credentials. The secret name will be specified in status.secret.name field. The operator will also create appropriate ClusterRole and ClusterRoleBinding for the k8s secret.</description></item><item><title>AzureRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/azure-secret-engine/azurerole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/azure-secret-engine/azurerole/</guid><description>New to KubeVault? Please start here.
AzureRole What is AzureRole An AzureRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create an Azure secret engine role in a Kubernetes native way.
When an AzureRole is created, the KubeVault operator configures a Vault role. A role may be set up with either an existing service principal or a set of Azure roles that will be assigned to a dynamically created service principal.</description></item><item><title>AzureRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/azure-secret-engine/azurerole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/azure-secret-engine/azurerole/</guid><description>New to KubeVault? Please start here.
AzureRole What is AzureRole An AzureRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create an Azure secret engine role in a Kubernetes native way.
When an AzureRole is created, the KubeVault operator configures a Vault role. A role may be set up with either an existing service principal or a set of Azure roles that will be assigned to a dynamically created service principal.</description></item><item><title>Changelog | KubeVault</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/welcome/changelog-v2020.07.09-beta.0/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/welcome/changelog-v2020.07.09-beta.0/</guid><description>KubeVault v2020.07.09-beta.0 (2020-07-09) kubevault/cli v0.4.0-beta.0 d672d6d Prepare for release v0.4.0-beta.0 (#31) 3795bce Add request&amp;rsquo;s phase from cli (#30) 1e2bd37 Update workflow step name 18ce00b Add workflow to update docs (#29) 2767953 Update update-release-tracker.sh 8f3dbe9 Update update-release-tracker.sh 3a946a6 Add script to update release tracker on pr merge (#28) 0656f6d Make release non-draft cde187c Update .kodiak.toml 06626ea Create .kodiak.toml 724552d Add blank line after license header (#27) 87f1090 Update dependencies (#26) 11f6a44 Update to Kubernetes v1.</description></item><item><title>Configure AWS IAM Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/aws-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/aws-iam/</guid><description>New to KubeVault? Please start here.
Configure AWS IAM Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. For AWS IAM authentication, it has to be enabled and configured in Vault. To perform this authenticaion:
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be &amp;quot;kubevault.com/aws&amp;quot;.
The specified secret data can have the following key:</description></item><item><title>Configure AWS IAM Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/aws-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/aws-iam/</guid><description>New to KubeVault? Please start here.
Configure AWS IAM Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. For AWS IAM authentication, it has to be enabled and configured in Vault. To perform this authenticaion:
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be &amp;quot;kubevault.com/aws&amp;quot;.
The specified secret data can have the following key:</description></item><item><title>Configure Kubernetes Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/kubernetes/</guid><description>New to KubeVault? Please start here.
Configure Kubernetes Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. For Kubernetes Authentication, it has to be enabled and configured in Vault. In Vault operator, it can be performed in two ways:
Using ServiceAccount Name Using ServiceAccount Token Secret Kubernetes Authentication using ServiceAccount Name To perform Kubernetes Authentication using ServiceAccount Name,
You have to specify serviceaccount name and role name in spec.</description></item><item><title>Configure Kubernetes Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/kubernetes/</guid><description>New to KubeVault? Please start here.
Configure Kubernetes Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. For Kubernetes Authentication, it has to be enabled and configured in Vault. In Vault operator, it can be performed in two ways:
Using ServiceAccount Name Using ServiceAccount Token Secret Kubernetes Authentication using ServiceAccount Name To perform Kubernetes Authentication using ServiceAccount Name,
You have to specify serviceaccount name and role name in spec.</description></item><item><title>Configure TLS Certificates Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/tls/</guid><description>New to KubeVault? Please start here.
Configure TLS Certificates Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. For TLS Certificates authentication, it has to be enabled and configured in Vault. To perform it,
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubernetes.io/tls.
The specified secret data must have the following key:</description></item><item><title>Configure TLS Certificates Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/tls/</guid><description>New to KubeVault? Please start here.
Configure TLS Certificates Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. For TLS Certificates authentication, it has to be enabled and configured in Vault. To perform it,
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubernetes.io/tls.
The specified secret data must have the following key:</description></item><item><title>Configure Token Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/token/</guid><description>New to KubeVault? Please start here.
Configure Token Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. To perform Token Authentication,
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubevault.com/token.
The specified secret data must have the following key:
Secret.Data[&amp;quot;token&amp;quot;] : Required. Specifies the Vault authentication token.</description></item><item><title>Configure Token Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/token/</guid><description>New to KubeVault? Please start here.
Configure Token Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. To perform Token Authentication,
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubevault.com/token.
The specified secret data must have the following key:
Secret.Data[&amp;quot;token&amp;quot;] : Required. Specifies the Vault authentication token.</description></item><item><title>Configure Userpass Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/userpass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/userpass/</guid><description>New to KubeVault? Please start here.
Configure Userpass Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. For Userpass authentication, it has to be enabled and configured in Vault. To perform it,
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubernetes.io/basic-auth.
The specified secret data must have the following key:</description></item><item><title>Configure Userpass Auth Method for Vault Server</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/userpass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/userpass/</guid><description>New to KubeVault? Please start here.
Configure Userpass Auth Method for Vault Server In Vault operator, usually Vault connection information are handled by AppBinding. For Userpass authentication, it has to be enabled and configured in Vault. To perform it,
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubernetes.io/basic-auth.
The specified secret data must have the following key:</description></item><item><title>Connect to Vault using AWS IAM Auth Method</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/aws-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/aws-iam/</guid><description>New to KubeVault? Please start here.
Connect to Vault using AWS IAM Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For AWS IAM authentication, it has to be enabled and configured in the Vault server. Follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The specified secret must be in AppBinding&amp;rsquo;s namespace.</description></item><item><title>Connect to Vault using AWS IAM Auth Method</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/aws-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/aws-iam/</guid><description>New to KubeVault? Please start here.
Connect to Vault using AWS IAM Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For AWS IAM authentication, it has to be enabled and configured in the Vault server. Follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The specified secret must be in AppBinding&amp;rsquo;s namespace.</description></item><item><title>Connect to Vault using Azure Auth Method</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/azure/</guid><description>New to KubeVault? Please start here.
Connect to Vault using Azure Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For Azure authentication, it has to be enabled and configured in the Vault server. Follow the steps below to create an appropriate AppBinding:
You have to specify the k8s secret name in spec.secret in the AppBinding.
The specified secret must be in AppBinding&amp;rsquo;s namespace.</description></item><item><title>Connect to Vault using Azure Auth Method</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/azure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/azure/</guid><description>New to KubeVault? Please start here.
Connect to Vault using Azure Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For Azure authentication, it has to be enabled and configured in the Vault server. Follow the steps below to create an appropriate AppBinding:
You have to specify the k8s secret name in spec.secret in the AppBinding.
The specified secret must be in AppBinding&amp;rsquo;s namespace.</description></item><item><title>Connect to Vault using GCP IAM Auth Method</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/gcp-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/gcp-iam/</guid><description>New to KubeVault? Please start here.
Connect to Vault using GCP IAM Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For GCP IAM authentication, it has to be enabled and configured in the Vault server. Follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The specified secret must be in AppBinding&amp;rsquo;s namespace.</description></item><item><title>Connect to Vault using GCP IAM Auth Method</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/gcp-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/gcp-iam/</guid><description>New to KubeVault? Please start here.
Connect to Vault using GCP IAM Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For GCP IAM authentication, it has to be enabled and configured in the Vault server. Follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The specified secret must be in AppBinding&amp;rsquo;s namespace.</description></item><item><title>Connect to Vault using Kubernetes Auth Method</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/kubernetes/</guid><description>New to KubeVault? Please start here.
Connect to Vault using Kubernetes Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For Kubernetes Authentication, it has to be enabled and configured in the Vault server. In KubeVault operator, it can be performed in two ways:
Using ServiceAccount Name Using ServiceAccount Token Secret Kubernetes Authentication using ServiceAccount Name To perform Kubernetes Authentication using ServiceAccount Name,</description></item><item><title>Connect to Vault using Kubernetes Auth Method</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/kubernetes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/kubernetes/</guid><description>New to KubeVault? Please start here.
Connect to Vault using Kubernetes Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For Kubernetes Authentication, it has to be enabled and configured in the Vault server. In KubeVault operator, it can be performed in two ways:
Using ServiceAccount Name Using ServiceAccount Token Secret Kubernetes Authentication using ServiceAccount Name To perform Kubernetes Authentication using ServiceAccount Name,</description></item><item><title>Connect to Vault using TLS Certificate Auth Method</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/tls/</guid><description>New to KubeVault? Please start here.
Connect to Vault using TLS Certificate Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For TLS Certificates authentication, it has to be enabled and configured in Vault. Follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The specified secret must be in AppBinding&amp;rsquo;s namespace.</description></item><item><title>Connect to Vault using TLS Certificate Auth Method</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/tls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/tls/</guid><description>New to KubeVault? Please start here.
Connect to Vault using TLS Certificate Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For TLS Certificates authentication, it has to be enabled and configured in Vault. Follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The specified secret must be in AppBinding&amp;rsquo;s namespace.</description></item><item><title>Connect to Vault using Token Auth Method</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/token/</guid><description>New to KubeVault? Please start here.
Connect to Vault using Token Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. To use Token Authentication, follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubevault.com/token.
The specified secret data must have the following key:</description></item><item><title>Connect to Vault using Token Auth Method</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/token/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/token/</guid><description>New to KubeVault? Please start here.
Connect to Vault using Token Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. To use Token Authentication, follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubevault.com/token.
The specified secret data must have the following key:</description></item><item><title>Connect to Vault using Userpass Auth Method</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/userpass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/userpass/</guid><description>New to KubeVault? Please start here.
Connect to Vault using Userpass Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For Userpass authentication, it has to be enabled and configured in the Vault server. Follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubernetes.</description></item><item><title>Connect to Vault using Userpass Auth Method</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/userpass/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/userpass/</guid><description>New to KubeVault? Please start here.
Connect to Vault using Userpass Auth Method The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. For Userpass authentication, it has to be enabled and configured in the Vault server. Follow the steps below to create an appropriate AppBinding:
You have to specify spec.secret in the AppBinding.
The type of the specified secret must be kubernetes.</description></item><item><title>Consul | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/consul/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/consul/</guid><description>New to KubeVault? Please start here.
Consul In the Consul storage backend, Vault data will be stored in the consul storage container. Vault documentation for Consul storage backend can be found in here
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault namespace: demo spec: replicas: 1 version: &amp;#34;1.0.1&amp;#34; serviceTemplate: spec: type: NodePort backend: consul: address: &amp;#34;http://my-service.demo.svc:8500&amp;#34; path: &amp;#34;vault&amp;#34; configSource: configMap: name: extra-config unsealer: secretShares: 4 secretThreshold: 2 mode: kubernetesSecret: secretName: vault-keys If you need to disable the server from executing the mlock syscall, you can provide disable_mlock in a ConfigMap and mention the name in spec.</description></item><item><title>Consul | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/consul/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/consul/</guid><description>New to KubeVault? Please start here.
Consul In the Consul storage backend, Vault data will be stored in the consul storage container. Vault documentation for Consul storage backend can be found in here
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault namespace: demo spec: replicas: 1 version: &amp;#34;1.0.1&amp;#34; serviceTemplate: spec: type: NodePort backend: consul: address: &amp;#34;http://my-service.demo.svc:8500&amp;#34; path: &amp;#34;vault&amp;#34; configSource: configMap: name: extra-config unsealer: secretShares: 4 secretThreshold: 2 mode: kubernetesSecret: secretName: vault-keys If you need to disable the server from executing the mlock syscall, you can provide disable_mlock in a ConfigMap and mention the name in spec.</description></item><item><title>Contributing | KubeVault</title><link>https://kubevault.com/docs/0.1.0/welcome/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/welcome/contributing/</guid><description>Contribution Guidelines Want to hack on Vault operator?
AppsCode projects are Apache 2.0 licensed and accept contributions via GitHub pull requests. This document outlines some of the conventions on development workflow, commit message formatting, contact points and other resources to make it easier to get your contribution accepted.
Certificate of Origin By contributing to this project you agree to the Developer Certificate of Origin (DCO). This document was created by the Linux Kernel community and is a simple statement that you, as a contributor, have the legal right to make the contribution.</description></item><item><title>Contributing | KubeVault</title><link>https://kubevault.com/docs/0.2.0/welcome/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/welcome/contributing/</guid><description>Contribution Guidelines Want to hack on Vault operator?
AppsCode projects are Apache 2.0 licensed and accept contributions via GitHub pull requests. This document outlines some of the conventions on development workflow, commit message formatting, contact points and other resources to make it easier to get your contribution accepted.
Certificate of Origin By contributing to this project you agree to the Developer Certificate of Origin (DCO). This document was created by the Linux Kernel community and is a simple statement that you, as a contributor, have the legal right to make the contribution.</description></item><item><title>Contributing | KubeVault</title><link>https://kubevault.com/docs/v0.3.0/welcome/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/welcome/contributing/</guid><description>Contribution Guidelines Want to hack on Vault operator?
AppsCode projects are Apache 2.0 licensed and accept contributions via GitHub pull requests. This document outlines some of the conventions on development workflow, commit message formatting, contact points and other resources to make it easier to get your contribution accepted.
Certificate of Origin By contributing to this project you agree to the Developer Certificate of Origin (DCO). This document was created by the Linux Kernel community and is a simple statement that you, as a contributor, have the legal right to make the contribution.</description></item><item><title>Contributing | KubeVault</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/welcome/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/welcome/contributing/</guid><description>Contribution Guidelines Want to hack on Vault operator?
AppsCode projects are Apache 2.0 licensed and accept contributions via GitHub pull requests. This document outlines some of the conventions on development workflow, commit message formatting, contact points and other resources to make it easier to get your contribution accepted.
Certificate of Origin By contributing to this project you agree to the Developer Certificate of Origin (DCO). This document was created by the Linux Kernel community and is a simple statement that you, as a contributor, have the legal right to make the contribution.</description></item><item><title>Csi-Vault</title><link>https://kubevault.com/docs/0.1.0/reference/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/csi-driver/</guid><description>csi-vault Vault CSI by Appscode - Start farms
Synopsis Vault CSI by Appscode - Start farms
Options --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for csi-vault --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --test.</description></item><item><title>Csi-Vault</title><link>https://kubevault.com/docs/0.2.0/reference/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/csi-driver/</guid><description>csi-vault Vault CSI by Appscode - Start farms
Synopsis Vault CSI by Appscode - Start farms
Options --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for csi-vault --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --test.</description></item><item><title>Csi-Vault</title><link>https://kubevault.com/docs/v0.3.0/reference/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/csi-driver/</guid><description>csi-vault Vault CSI by Appscode - Start farms
Synopsis Vault CSI by Appscode - Start farms
Options --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for csi-vault --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Csi-Vault</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/csi-driver/</guid><description>csi-vault Vault CSI by Appscode - Start farms
Synopsis Vault CSI by Appscode - Start farms
Options --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for csi-vault --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Csi-Vault Run</title><link>https://kubevault.com/docs/0.1.0/reference/csi-driver/csi-vault_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/csi-driver/csi-vault_run/</guid><description>csi-vault run Run Vault CSI driver
Synopsis Run Vault CSI driver
csi-vault run [flags] Options --authentication-kubeconfig string kubeconfig file pointing at the 'core' kubernetes server with enough rights to create tokenaccessreviews.authentication.k8s.io. --authentication-skip-lookup If false, the authentication-kubeconfig will be used to lookup missing authentication configuration from the cluster. --authentication-token-webhook-cache-ttl duration The duration to cache responses from the webhook token authenticator. (default 10s) --authentication-tolerate-lookup-failure If true, failures to look up missing authentication configuration from the cluster are not considered fatal.</description></item><item><title>Csi-Vault Run</title><link>https://kubevault.com/docs/0.2.0/reference/csi-driver/csi-vault_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/csi-driver/csi-vault_run/</guid><description>csi-vault run Run Vault CSI driver
Synopsis Run Vault CSI driver
csi-vault run [flags] Options --authentication-kubeconfig string kubeconfig file pointing at the 'core' kubernetes server with enough rights to create tokenaccessreviews.authentication.k8s.io. --authentication-skip-lookup If false, the authentication-kubeconfig will be used to lookup missing authentication configuration from the cluster. --authentication-token-webhook-cache-ttl duration The duration to cache responses from the webhook token authenticator. (default 10s) --authentication-tolerate-lookup-failure If true, failures to look up missing authentication configuration from the cluster are not considered fatal.</description></item><item><title>Csi-Vault Run</title><link>https://kubevault.com/docs/v0.3.0/reference/csi-driver/csi-vault_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/csi-driver/csi-vault_run/</guid><description>csi-vault run Run Vault CSI driver
Synopsis Run Vault CSI driver
csi-vault run [flags] Options --authentication-kubeconfig string kubeconfig file pointing at the 'core' kubernetes server with enough rights to create tokenaccessreviews.authentication.k8s.io. --authentication-skip-lookup If false, the authentication-kubeconfig will be used to lookup missing authentication configuration from the cluster. --authentication-token-webhook-cache-ttl duration The duration to cache responses from the webhook token authenticator. (default 10s) --authentication-tolerate-lookup-failure If true, failures to look up missing authentication configuration from the cluster are not considered fatal.</description></item><item><title>Csi-Vault Run</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/csi-driver/csi-vault_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/csi-driver/csi-vault_run/</guid><description>csi-vault run Run Vault CSI driver
Synopsis Run Vault CSI driver
csi-vault run [flags] Options --authentication-kubeconfig string kubeconfig file pointing at the 'core' kubernetes server with enough rights to create tokenreviews.authentication.k8s.io. --authentication-skip-lookup If false, the authentication-kubeconfig will be used to lookup missing authentication configuration from the cluster. --authentication-token-webhook-cache-ttl duration The duration to cache responses from the webhook token authenticator. (default 10s) --authentication-tolerate-lookup-failure If true, failures to look up missing authentication configuration from the cluster are not considered fatal.</description></item><item><title>Csi-Vault Version</title><link>https://kubevault.com/docs/0.1.0/reference/csi-driver/csi-vault_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/csi-driver/csi-vault_version/</guid><description>csi-vault version Prints binary version number.
Synopsis Prints binary version number.
csi-vault version [flags] Options -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --test.</description></item><item><title>Csi-Vault Version</title><link>https://kubevault.com/docs/0.2.0/reference/csi-driver/csi-vault_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/csi-driver/csi-vault_version/</guid><description>csi-vault version Prints binary version number.
Synopsis Prints binary version number.
csi-vault version [flags] Options -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --test.</description></item><item><title>Csi-Vault Version</title><link>https://kubevault.com/docs/v0.3.0/reference/csi-driver/csi-vault_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/csi-driver/csi-vault_version/</guid><description>csi-vault version Prints binary version number.
Synopsis Prints binary version number.
csi-vault version [flags] Options --check string Check version constraint -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Csi-Vault Version</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/csi-driver/csi-vault_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/csi-driver/csi-vault_version/</guid><description>csi-vault version Prints binary version number.
Synopsis Prints binary version number.
csi-vault version [flags] Options --check string Check version constraint -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>DatabaseAccessRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/0.1.0/concepts/database-crds/databaseaccessrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/database-crds/databaseaccessrequest/</guid><description>New to KubeVault? Please start here.
DatabaseAccessRequest CRD DatabaseAccessRequest CRD is to request database credential from vault. If DatabaseAccessRequest is approved, then Vault operator will issue credential from vault and create Kubernetes secret containing credential. The secret name will be specified in status.secret.name field.
apiVersion: authorization.kubedb.com/v1alpha1 kind: DatabaseAccessRequest metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... DatabaseAccessRequest Spec DatabaseAccessRequest spec contains information about database role and subject.</description></item><item><title>DatabaseAccessRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/0.2.0/concepts/database-crds/databaseaccessrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/database-crds/databaseaccessrequest/</guid><description>New to KubeVault? Please start here.
DatabaseAccessRequest CRD DatabaseAccessRequest CRD is to request database credential from vault. If DatabaseAccessRequest is approved, then Vault operator will issue credential from vault and create Kubernetes secret containing credential. The secret name will be specified in status.secret.name field.
apiVersion: authorization.kubedb.com/v1alpha1 kind: DatabaseAccessRequest metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... DatabaseAccessRequest Spec DatabaseAccessRequest spec contains information about database role and subject.</description></item><item><title>DatabaseAccessRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/databaseaccessrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/databaseaccessrequest/</guid><description>New to KubeVault? Please start here.
DatabaseAccessRequest What is DatabaseAccessRequest A DatabaseAccessRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request a Vault server for database credentials in a Kubernetes native way. If DatabaseAccessRequest is approved, then the KubeVault operator will issue credentials and create Kubernetes secret containing credentials. The secret name will be specified in status.secret.name field.
KubeVault operator performs the following operations when a DatabaseAccessRequest CRD is created:</description></item><item><title>DatabaseAccessRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/database-secret-engine/databaseaccessrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/database-secret-engine/databaseaccessrequest/</guid><description>New to KubeVault? Please start here.
DatabaseAccessRequest What is DatabaseAccessRequest A DatabaseAccessRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request a Vault server for database credentials in a Kubernetes native way. If DatabaseAccessRequest is approved, then the KubeVault operator will issue credentials and create Kubernetes secret containing credentials. The secret name will be specified in status.secret.name field.
KubeVault operator performs the following operations when a DatabaseAccessRequest CRD is created:</description></item><item><title>Deploy Vault on Amazon EKS</title><link>https://kubevault.com/docs/0.1.0/guides/platforms/eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/platforms/eks/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Amazon EKS Here, we are going to deploy Vault in Amazon EKS using Vault operator. We are going to use AWS S3 bucket as Vault backend and awsKmsSsm unsealer mode for automatic unsealing the Vault.
Before You Begin At first, you need to have a EKS cluster. If you don&amp;rsquo;t already have a cluster, create one from here. You can use eksctl command line tool to create EKS cluster easily.</description></item><item><title>Deploy Vault on Amazon EKS</title><link>https://kubevault.com/docs/0.2.0/guides/platforms/eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/platforms/eks/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Amazon EKS Here, we are going to deploy Vault in Amazon EKS using Vault operator. We are going to use AWS S3 bucket as Vault backend and awsKmsSsm unsealer mode for automatic unsealing the Vault.
Before You Begin At first, you need to have a EKS cluster. If you don&amp;rsquo;t already have a cluster, create one from here. You can use eksctl command line tool to create EKS cluster easily.</description></item><item><title>Deploy Vault on Amazon EKS</title><link>https://kubevault.com/docs/v0.3.0/guides/platforms/eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/platforms/eks/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Amazon EKS Here, we are going to deploy Vault in Amazon EKS using KubeVault operator. We are going to use AWS S3 bucket as Vault backend and awsKmsSsm unsealer mode for automatically unsealing the Vault.
Before You Begin At first, you need to have an EKS cluster. If you don&amp;rsquo;t already have a cluster, create one from here. You can use eksctl command line tool to create EKS cluster easily.</description></item><item><title>Deploy Vault on Amazon EKS</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/eks/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Amazon EKS Here, we are going to deploy Vault in Amazon EKS using KubeVault operator. We are going to use AWS S3 bucket as Vault backend and awsKmsSsm unsealer mode for automatically unsealing the Vault.
Before You Begin At first, you need to have an EKS cluster. If you don&amp;rsquo;t already have a cluster, create one from here. You can use eksctl command line tool to create EKS cluster easily.</description></item><item><title>Deploy Vault on Azure Kubernetes Service (AKS)</title><link>https://kubevault.com/docs/0.1.0/guides/platforms/aks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/platforms/aks/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Azure Kubernetes Service (AKS) Here, we are going to deploy Vault in AKS using Vault operator. We are going to use Azure Storage Container as Vault backend and azureKeyVault unsealer mode for automatic unsealing the Vault.
Before You Begin At first, you need to have a AKS cluster. If you don&amp;rsquo;t already have a cluster, create one from here.</description></item><item><title>Deploy Vault on Azure Kubernetes Service (AKS)</title><link>https://kubevault.com/docs/0.2.0/guides/platforms/aks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/platforms/aks/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Azure Kubernetes Service (AKS) Here, we are going to deploy Vault in AKS using Vault operator. We are going to use Azure Storage Container as Vault backend and azureKeyVault unsealer mode for automatic unsealing the Vault.
Before You Begin At first, you need to have a AKS cluster. If you don&amp;rsquo;t already have a cluster, create one from here.</description></item><item><title>Deploy Vault on Azure Kubernetes Service (AKS)</title><link>https://kubevault.com/docs/v0.3.0/guides/platforms/aks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/platforms/aks/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Azure Kubernetes Service (AKS) Here, we are going to deploy Vault in AKS using KubeVault operator. We are going to use Azure Storage Container as Vault backend and azureKeyVault unsealer mode for automatically unsealing the Vault.
Before You Begin At first, you need to have an AKS cluster. If you don&amp;rsquo;t already have a cluster, create one from here.</description></item><item><title>Deploy Vault on Azure Kubernetes Service (AKS)</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/aks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/aks/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Azure Kubernetes Service (AKS) Here, we are going to deploy Vault in AKS using KubeVault operator. We are going to use Azure Storage Container as Vault backend and azureKeyVault unsealer mode for automatically unsealing the Vault.
Before You Begin At first, you need to have an AKS cluster. If you don&amp;rsquo;t already have a cluster, create one from here.</description></item><item><title>Deploy Vault on Google Kubernetes Engine (GKE)</title><link>https://kubevault.com/docs/0.1.0/guides/platforms/gke/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/platforms/gke/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Google Kubernetes Engine (GKE) Here, we are going to deploy Vault in GKE using Vault operator. We are going to use GCS bucket as Vault backend and googleKmsGcs unsealer mode for automatic unsealing the Vault.
Before You Begin At first, you need to have a GKE cluster. If you don&amp;rsquo;t already have a cluster, create one from here.
Install Vault operator in your cluster following the steps here.</description></item><item><title>Deploy Vault on Google Kubernetes Engine (GKE)</title><link>https://kubevault.com/docs/0.2.0/guides/platforms/gke/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/platforms/gke/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Google Kubernetes Engine (GKE) Here, we are going to deploy Vault in GKE using Vault operator. We are going to use GCS bucket as Vault backend and googleKmsGcs unsealer mode for automatic unsealing the Vault.
Before You Begin At first, you need to have a GKE cluster. If you don&amp;rsquo;t already have a cluster, create one from here.
Install Vault operator in your cluster following the steps here.</description></item><item><title>Deploy Vault on Google Kubernetes Engine (GKE)</title><link>https://kubevault.com/docs/v0.3.0/guides/platforms/gke/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/platforms/gke/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Google Kubernetes Engine (GKE) Here, we are going to deploy Vault in GKE using KubeVault operator. We are going to use GCS bucket as Vault backend and googleKmsGcs unsealer mode for automatically unsealing the Vault.
Before You Begin At first, you need to have a GKE cluster. If you don&amp;rsquo;t already have a cluster, create one from here.
Install KubeVault operator in your cluster following the steps here.</description></item><item><title>Deploy Vault on Google Kubernetes Engine (GKE)</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/gke/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/gke/</guid><description>New to KubeVault? Please start here.
Deploy Vault on Google Kubernetes Engine (GKE) Here, we are going to deploy Vault in GKE using KubeVault operator. We are going to use GCS bucket as Vault backend and googleKmsGcs unsealer mode for automatically unsealing the Vault.
Before You Begin At first, you need to have a GKE cluster. If you don&amp;rsquo;t already have a cluster, create one from here.
Install KubeVault operator in your cluster following the steps here.</description></item><item><title>Developer Guide</title><link>https://kubevault.com/docs/0.1.0/setup/developer-guide/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/developer-guide/overview/</guid><description>New to KubeVault? Please start here.
Development Guide This document is intended to be the canonical source of truth for things like supported toolchain versions for building Vault operator. If you find a requirement that this doc does not capture, please submit an issue on github.
This document is intended to be relative to the branch in which it is found. It is guaranteed that requirements will change over time for the development branch, but release branches of Vault operator should not change.</description></item><item><title>Developer Guide</title><link>https://kubevault.com/docs/0.2.0/setup/developer-guide/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/developer-guide/overview/</guid><description>New to KubeVault? Please start here.
Development Guide This document is intended to be the canonical source of truth for things like supported toolchain versions for building Vault operator. If you find a requirement that this doc does not capture, please submit an issue on github.
This document is intended to be relative to the branch in which it is found. It is guaranteed that requirements will change over time for the development branch, but release branches of Vault operator should not change.</description></item><item><title>Developer Guide</title><link>https://kubevault.com/docs/v0.3.0/setup/developer-guide/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/developer-guide/overview/</guid><description>New to KubeVault? Please start here.
Development Guide This document is intended to be the canonical source of truth for things like supported toolchain versions for building Vault operator. If you find a requirement that this doc does not capture, please submit an issue on github.
This document is intended to be relative to the branch in which it is found. It is guaranteed that requirements will change over time for the development branch, but release branches of Vault operator should not change.</description></item><item><title>Developer Guide</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/developer-guide/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/developer-guide/overview/</guid><description>New to KubeVault? Please start here.
Development Guide This document is intended to be the canonical source of truth for things like supported toolchain versions for building Vault operator. If you find a requirement that this doc does not capture, please submit an issue on github.
This document is intended to be relative to the branch in which it is found. It is guaranteed that requirements will change over time for the development branch, but release branches of Vault operator should not change.</description></item><item><title>Dynamodb | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/dynamodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/dynamodb/</guid><description>New to KubeVault? Please start here.
DynamoDB In DynamoDB storage backend, data will be stored in DynamoDB. Vault documentation for DynamoDB storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-dynamoDB namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: dynamoDB: table: &amp;#34;my-vault-table&amp;#34; region: &amp;#34;us-west-1&amp;#34; readCapacity: 5 writeCapacity: 5 spec.backend.dynamoDB To use dynamoDB as backend storage in Vault specify spec.backend.dynamoDB in VaultServer CRD.
spec: backend: dynamoDB: table: &amp;lt;table_name&amp;gt; region: &amp;lt;region&amp;gt; endPoint: &amp;lt;endpoint&amp;gt; haEnabled: &amp;lt;true/false&amp;gt; readCapacity: &amp;lt;read_capacity&amp;gt; writeCapacity: &amp;lt;write_capacity&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; sessionTokenSecret: &amp;lt;secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; spec.</description></item><item><title>Dynamodb | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/dynamodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/dynamodb/</guid><description>New to KubeVault? Please start here.
DynamoDB In DynamoDB storage backend, data will be stored in DynamoDB. Vault documentation for DynamoDB storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-dynamoDB namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: dynamoDB: table: &amp;#34;my-vault-table&amp;#34; region: &amp;#34;us-west-1&amp;#34; readCapacity: 5 writeCapacity: 5 spec.backend.dynamoDB To use dynamoDB as backend storage in Vault specify spec.backend.dynamoDB in VaultServer CRD.
spec: backend: dynamoDB: table: &amp;lt;table_name&amp;gt; region: &amp;lt;region&amp;gt; endPoint: &amp;lt;endpoint&amp;gt; haEnabled: &amp;lt;true/false&amp;gt; readCapacity: &amp;lt;read_capacity&amp;gt; writeCapacity: &amp;lt;write_capacity&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; sessionTokenSecret: &amp;lt;secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; spec.</description></item><item><title>Dynamodb | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/dynamodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/dynamodb/</guid><description>New to KubeVault? Please start here.
DynamoDB In DynamoDB storage backend, Vault data will be stored in DynamoDB. Vault documentation for DynamoDB storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-dynamoDB namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: dynamodb: table: &amp;#34;my-vault-table&amp;#34; region: &amp;#34;us-west-1&amp;#34; readCapacity: 5 writeCapacity: 5 spec.backend.dynamodb To use dynamoDB as backend storage in Vault specify spec.backend.dynamodb in VaultServer CRD.
spec: backend: dynamodb: table: &amp;lt;table_name&amp;gt; region: &amp;lt;region&amp;gt; endpoint: &amp;lt;endpoint&amp;gt; haEnabled: &amp;lt;true/false&amp;gt; readCapacity: &amp;lt;read_capacity&amp;gt; writeCapacity: &amp;lt;write_capacity&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; sessionTokenSecret: &amp;lt;secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>Dynamodb | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/dynamodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/dynamodb/</guid><description>New to KubeVault? Please start here.
DynamoDB In DynamoDB storage backend, Vault data will be stored in DynamoDB. Vault documentation for DynamoDB storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-dynamoDB namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: dynamodb: table: &amp;#34;my-vault-table&amp;#34; region: &amp;#34;us-west-1&amp;#34; readCapacity: 5 writeCapacity: 5 spec.backend.dynamodb To use dynamoDB as backend storage in Vault specify spec.backend.dynamodb in VaultServer CRD.
spec: backend: dynamodb: table: &amp;lt;table_name&amp;gt; region: &amp;lt;region&amp;gt; endpoint: &amp;lt;endpoint&amp;gt; haEnabled: &amp;lt;true/false&amp;gt; readCapacity: &amp;lt;read_capacity&amp;gt; writeCapacity: &amp;lt;write_capacity&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; sessionTokenSecret: &amp;lt;secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>Etcd | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/etcd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/etcd/</guid><description>New to KubeVault? Please start here.
Etcd In Etcd storage backend, data will be stored in Etcd. Vault documentation for Etcd storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-etcd namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: etcd: address: &amp;#34;http://example.etcd.svc:2379&amp;#34; etcdApi: &amp;#34;v3&amp;#34; spec.backend.etcd To use Etcd as storage backend in Vault specify spec.backend.etcd in VaultServer CRD.
spec: backend: etcd: address: &amp;#34;http://example.etcd.svc:2379&amp;#34; etcdApi: &amp;#34;v3&amp;#34; spec.</description></item><item><title>Etcd | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/etcd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/etcd/</guid><description>New to KubeVault? Please start here.
Etcd In Etcd storage backend, data will be stored in Etcd. Vault documentation for Etcd storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-etcd namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: etcd: address: &amp;#34;http://example.etcd.svc:2379&amp;#34; etcdApi: &amp;#34;v3&amp;#34; spec.backend.etcd To use Etcd as storage backend in Vault specify spec.backend.etcd in VaultServer CRD.
spec: backend: etcd: address: &amp;#34;http://example.etcd.svc:2379&amp;#34; etcdApi: &amp;#34;v3&amp;#34; spec.</description></item><item><title>Etcd | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/etcd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/etcd/</guid><description>New to KubeVault? Please start here.
Etcd In Etcd storage backend, Vault data will be stored in Etcd. Vault documentation for Etcd storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-etcd namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: etcd: address: &amp;#34;http://example.etcd.svc:2379&amp;#34; etcdApi: &amp;#34;v3&amp;#34; spec.backend.etcd To use Etcd as storage backend in Vault specify spec.backend.etcd in VaultServer CRD.
spec: backend: etcd: address: &amp;#34;http://example.etcd.svc:2379&amp;#34; etcdApi: &amp;#34;v3&amp;#34; Here, we are going to describe the various attributes of the spec.</description></item><item><title>Etcd | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/etcd/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/etcd/</guid><description>New to KubeVault? Please start here.
Etcd In Etcd storage backend, Vault data will be stored in Etcd. Vault documentation for Etcd storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-etcd namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: etcd: address: &amp;#34;http://example.etcd.svc:2379&amp;#34; etcdApi: &amp;#34;v3&amp;#34; spec.backend.etcd To use Etcd as storage backend in Vault specify spec.backend.etcd in VaultServer CRD.
spec: backend: etcd: address: &amp;#34;http://example.etcd.svc:2379&amp;#34; etcdApi: &amp;#34;v3&amp;#34; Here, we are going to describe the various attributes of the spec.</description></item><item><title>External Vault Server</title><link>https://kubevault.com/docs/v0.3.0/guides/vault-server/external-vault-sever/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/vault-server/external-vault-sever/</guid><description>New to KubeVault? Please start here.
External Vault Server In this tutorial, we are going to demonstrate how the KubeVault operator works with external Vault servers (i.e. not provisioned by the KubeVault operator). To do so, we need to configure both the cluster and the Vault server. Later we will create a Vault policy using VaultPolicy CRD in Vault to check whether it is working or not.
Before you begin Install KubeVault operator in your cluster following the steps here.</description></item><item><title>External Vault Server</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/vault-server/external-vault-sever/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/vault-server/external-vault-sever/</guid><description>New to KubeVault? Please start here.
External Vault Server In this tutorial, we are going to demonstrate how the KubeVault operator works with external Vault servers (i.e. not provisioned by the KubeVault operator). To do so, we need to configure both the cluster and the Vault server. Later we will create a Vault policy using VaultPolicy CRD in Vault to check whether it is working or not.
Before you begin Install KubeVault operator in your cluster following the steps here.</description></item><item><title>Filesystem | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/filesystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/filesystem/</guid><description>New to KubeVault? Please start here.
Filesystem The Filesystem storage backend stores Vault data on the filesystem using a standard directory structure. As the Filesystem backend does not support high availability (HA), it can be used for single node setups(i.e. vaultserver.spec.replicas: 1). A VolumeClaimTemplate can be specified to create (or reuse if already exist) a PersistentVolumeClaim so that Vault data can be stored in the corresponding PersistentVolume.
apiVersion: kubevault.</description></item><item><title>Filesystem | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/filesystem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/filesystem/</guid><description>New to KubeVault? Please start here.
Filesystem The Filesystem storage backend stores Vault data on the filesystem using a standard directory structure. As the Filesystem backend does not support high availability (HA), it can be used for single node setups(i.e. vaultserver.spec.replicas: 1). A VolumeClaimTemplate can be specified to create (or reuse if already exist) a PersistentVolumeClaim so that Vault data can be stored in the corresponding PersistentVolume.
apiVersion: kubevault.</description></item><item><title>GCPAccessKeyRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/gcp-secret-engine/gcpaccesskeyrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/gcp-secret-engine/gcpaccesskeyrequest/</guid><description>New to KubeVault? Please start here.
GCPAccessKeyRequest What is GCPAccessKeyRequest An GCPAccessKeyRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request for GCP credentials in a Kubernetes native way. If an GCPAccessKeyRequest is approved, then the KubeVault operator will issue credentials using a Vault server and create a Kubernetes secret containing the GCP credentials. The secret name will be specified in status.secret.name field. The operator will also create appropriate ClusterRole and ClusterRoleBinding for the k8s secret.</description></item><item><title>GCPAccessKeyRequest | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/gcp-secret-engine/gcpaccesskeyrequest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/gcp-secret-engine/gcpaccesskeyrequest/</guid><description>New to KubeVault? Please start here.
GCPAccessKeyRequest What is GCPAccessKeyRequest An GCPAccessKeyRequest is a Kubernetes CustomResourceDefinition (CRD) which allows a user to request for GCP credentials in a Kubernetes native way. If an GCPAccessKeyRequest is approved, then the KubeVault operator will issue credentials using a Vault server and create a Kubernetes secret containing the GCP credentials. The secret name will be specified in status.secret.name field. The operator will also create appropriate ClusterRole and ClusterRoleBinding for the k8s secret.</description></item><item><title>GCPRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/gcp-secret-engine/gcprole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/gcp-secret-engine/gcprole/</guid><description>New to KubeVault? Please start here.
GCPRole What is GCPRole A GCPRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a GCP secret engine role in a Kubernetes native way.
When a GCPRole is created, the KubeVault operator configures a Vault roleset. The rolesets determine the permissions that Service Account credentials generated by Vault will have on GCP resources. If the user deletes the GCPRole CRD, then the respective role will also be deleted from Vault.</description></item><item><title>GCPRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/gcp-secret-engine/gcprole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/gcp-secret-engine/gcprole/</guid><description>New to KubeVault? Please start here.
GCPRole What is GCPRole A GCPRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a GCP secret engine role in a Kubernetes native way.
When a GCPRole is created, the KubeVault operator configures a Vault roleset. The rolesets determine the permissions that Service Account credentials generated by Vault will have on GCP resources. If the user deletes the GCPRole CRD, then the respective role will also be deleted from Vault.</description></item><item><title>GCS | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/gcs/</guid><description>New to KubeVault? Please start here.
Google Cloud Storage (GCS) In Google Cloud Storage (GCS) storage backend, data will be stored in Google Cloud Storage. Vault documentation for GCS storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-gcs namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: gcs: bucket: &amp;#34;my-vault-storage&amp;#34; credentialSecret: &amp;#34;my-gcs-credential&amp;#34; spec.backend.gcs To use GCS as backend storage in Vault specify spec.backend.gcs in VaultServer CRD.</description></item><item><title>GCS | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/gcs/</guid><description>New to KubeVault? Please start here.
Google Cloud Storage (GCS) In Google Cloud Storage (GCS) storage backend, data will be stored in Google Cloud Storage. Vault documentation for GCS storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-gcs namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: gcs: bucket: &amp;#34;my-vault-storage&amp;#34; credentialSecret: &amp;#34;my-gcs-credential&amp;#34; spec.backend.gcs To use GCS as backend storage in Vault specify spec.backend.gcs in VaultServer CRD.</description></item><item><title>GCS | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/gcs/</guid><description>New to KubeVault? Please start here.
Google Cloud Storage (GCS) In Google Cloud Storage (GCS) storage backend, Vault data will be stored in Google Cloud Storage. Vault documentation for GCS storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-gcs namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: gcs: bucket: &amp;#34;my-vault-storage&amp;#34; credentialSecret: &amp;#34;my-gcs-credential&amp;#34; spec.backend.gcs To use GCS as backend storage in Vault specify spec.backend.gcs in VaultServer CRD.</description></item><item><title>GCS | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/gcs/</guid><description>New to KubeVault? Please start here.
Google Cloud Storage (GCS) In Google Cloud Storage (GCS) storage backend, Vault data will be stored in Google Cloud Storage. Vault documentation for GCS storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-gcs namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: gcs: bucket: &amp;#34;my-vault-storage&amp;#34; credentialSecret: &amp;#34;my-gcs-credential&amp;#34; spec.backend.gcs To use GCS as backend storage in Vault specify spec.backend.gcs in VaultServer CRD.</description></item><item><title>Google Cloud KMS | Vault Unsealer</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/google_kms_gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/google_kms_gcs/</guid><description>New to KubeVault? Please start here.
mode.googleKmsGcs To use googleKmsGcs mode specify mode.googleKmsGcs. In this mode, unseal keys and root token will be stored in Google Cloud Storage and they will be encrypted using google cryptographic keys.
spec: unsealer: mode: googleKmsGcs: bucket: &amp;lt;bucket_name&amp;gt; kmsProject: &amp;lt;project_name&amp;gt; kmsLocation: &amp;lt;location&amp;gt; kmsKeyRing: &amp;lt;key_ring_name&amp;gt; kmsCryptoKey: &amp;lt;crypto_key_name&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; mode.googleKmsGcs has following field:
googleKmsGcs.bucket googleKmsGcs.bucket is a required field that specifies the name of the bucket to store keys.</description></item><item><title>Google Cloud KMS | Vault Unsealer</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/google_kms_gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/google_kms_gcs/</guid><description>New to KubeVault? Please start here.
mode.googleKmsGcs To use googleKmsGcs mode specify mode.googleKmsGcs. In this mode, unseal keys and root token will be stored in Google Cloud Storage and they will be encrypted using google cryptographic keys.
spec: unsealer: mode: googleKmsGcs: bucket: &amp;lt;bucket_name&amp;gt; kmsProject: &amp;lt;project_name&amp;gt; kmsLocation: &amp;lt;location&amp;gt; kmsKeyRing: &amp;lt;key_ring_name&amp;gt; kmsCryptoKey: &amp;lt;crypto_key_name&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; mode.googleKmsGcs has following field:
googleKmsGcs.bucket googleKmsGcs.bucket is a required field that specifies the name of the bucket to store keys.</description></item><item><title>Google Cloud KMS | Vault Unsealer</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/google_kms_gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/google_kms_gcs/</guid><description>New to KubeVault? Please start here.
mode.googleKmsGcs To use googleKmsGcs mode specify mode.googleKmsGcs. In this mode, unseal keys and root token will be stored in Google Cloud Storage and they will be encrypted using google cryptographic keys.
spec: unsealer: mode: googleKmsGcs: bucket: &amp;lt;bucket_name&amp;gt; kmsProject: &amp;lt;project_name&amp;gt; kmsLocation: &amp;lt;location&amp;gt; kmsKeyRing: &amp;lt;key_ring_name&amp;gt; kmsCryptoKey: &amp;lt;crypto_key_name&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; mode.googleKmsGcs has the following fields:
googleKmsGcs.bucket googleKmsGcs.bucket is a required field that specifies the name of the bucket to store keys.</description></item><item><title>Google Cloud KMS | Vault Unsealer</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/google_kms_gcs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/google_kms_gcs/</guid><description>New to KubeVault? Please start here.
mode.googleKmsGcs To use googleKmsGcs mode specify mode.googleKmsGcs. In this mode, unseal keys and root token will be stored in Google Cloud Storage and they will be encrypted using google cryptographic keys.
spec: unsealer: mode: googleKmsGcs: bucket: &amp;lt;bucket_name&amp;gt; kmsProject: &amp;lt;project_name&amp;gt; kmsLocation: &amp;lt;location&amp;gt; kmsKeyRing: &amp;lt;key_ring_name&amp;gt; kmsCryptoKey: &amp;lt;crypto_key_name&amp;gt; credentialSecret: &amp;lt;secret_name&amp;gt; mode.googleKmsGcs has the following fields:
googleKmsGcs.bucket googleKmsGcs.bucket is a required field that specifies the name of the bucket to store keys.</description></item><item><title>Grafana dashboard for Vault Server</title><link>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-server/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-server/grafana/</guid><description>New to KubeVault? Please start here.
Visualize Vault server data using Grafana dashboard Grafana provides an elegant graphical user interface to visualize data. You can create beautiful dashboard easily with a meaningful representation of your Prometheus metrics.
If there is no grafana instance running on your cluster, then you can read this tutorial to deploy one.
Add Prometheus Data Source We have to add our Prometheus server prometheus-prometheus-0 as data source of grafana.</description></item><item><title>Grafana dashboard for Vault Server</title><link>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-server/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-server/grafana/</guid><description>New to KubeVault? Please start here.
Visualize Vault server data using Grafana dashboard Grafana provides an elegant graphical user interface to visualize data. You can create beautiful dashboard easily with a meaningful representation of your Prometheus metrics.
If there is no grafana instance running on your cluster, then you can read this tutorial to deploy one.
Add Prometheus Data Source We have to add our Prometheus server prometheus-prometheus-0 as data source of grafana.</description></item><item><title>Grafana dashboard for Vault Server</title><link>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-server/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-server/grafana/</guid><description>New to KubeVault? Please start here.
Visualize Vault server data using Grafana dashboard Grafana provides an elegant graphical user interface to visualize data. You can create beautiful dashboard easily with a meaningful representation of your Prometheus metrics.
If there is no grafana instance running on your cluster, then you can read this tutorial to deploy one.
Add Prometheus Data Source We have to add our Prometheus server prometheus-prometheus-0 as data source of grafana.</description></item><item><title>Grafana dashboard for Vault Server</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-server/grafana/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-server/grafana/</guid><description>New to KubeVault? Please start here.
Visualize Vault server data using Grafana dashboard Grafana provides an elegant graphical user interface to visualize data. You can create beautiful dashboard easily with a meaningful representation of your Prometheus metrics.
If there is no grafana instance running on your cluster, then you can read this tutorial to deploy one.
Add Prometheus Data Source We have to add our Prometheus server prometheus-prometheus-0 as data source of grafana.</description></item><item><title>In Memory | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/inmem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/inmem/</guid><description>New to KubeVault? Please start here.
In-Memory In In-Memory backend storage, data will be kept in memory. If the Kubernetes pod on which vault is running is restarted, then all data will be lost. This is useful for development and experimentation, but use of this backend is highly discouraged in production. Vault documentation for In-Memory storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-inmem namespace: demo spec: nodes: 1 version: &amp;#34;0.</description></item><item><title>In Memory | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/inmem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/inmem/</guid><description>New to KubeVault? Please start here.
In-Memory In In-Memory backend storage, data will be kept in memory. If the Kubernetes pod on which vault is running is restarted, then all data will be lost. This is useful for development and experimentation, but use of this backend is highly discouraged in production. Vault documentation for In-Memory storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-inmem namespace: demo spec: nodes: 1 version: &amp;#34;0.</description></item><item><title>In Memory | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/inmem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/inmem/</guid><description>New to KubeVault? Please start here.
In-Memory In In-Memory backend storage, Vault data will be kept in memory. If the Kubernetes pod on which Vault is running is restarted, then all data will be lost. This is useful for development and experimentation, but the use of this backend is highly discouraged in production. Vault documentation for In-Memory storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-inmem namespace: demo spec: replicas: 1 version: &amp;#34;1.</description></item><item><title>In Memory | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/inmem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/inmem/</guid><description>New to KubeVault? Please start here.
In-Memory In In-Memory backend storage, Vault data will be kept in memory. If the Kubernetes pod on which Vault is running is restarted, then all data will be lost. This is useful for development and experimentation, but the use of this backend is highly discouraged in production. Vault documentation for In-Memory storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-inmem namespace: demo spec: replicas: 1 version: &amp;#34;1.</description></item><item><title>Install KubeVault CLI</title><link>https://kubevault.com/docs/0.1.0/setup/cli/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/cli/install/</guid><description>New to KubeVault? Please start here.
Installation Guide In order to install KubeVault CLI as kubectl-plugin, download the kubectl-vault binary and move it anywhere on you PATH.
macOS Linux Windows macOS $ wget -O kubectl-vault https://github.com/kubevault/cli/releases/download/0.1.0/kubectl-vault-darwin-amd64 \ &amp;amp;&amp;amp; chmod +x kubectl-vault \ &amp;amp;&amp;amp; sudo mv kubectl-vault /usr/local/bin/ Linux $ wget -O kubectl-vault https://github.com/kubevault/cli/releases/download/0.1.0/kubectl-vault-linux-amd64 \ &amp;amp;&amp;amp; chmod +x kubectl-vault \ &amp;amp;&amp;amp; sudo mv kubectl-vault /usr/local/bin/ Windows Download the latest release v0.</description></item><item><title>Install KubeVault CLI</title><link>https://kubevault.com/docs/0.2.0/setup/cli/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/cli/install/</guid><description>New to KubeVault? Please start here.
Installation Guide In order to install KubeVault CLI as kubectl-plugin, download the kubectl-vault binary and move it anywhere on you PATH.
macOS Linux Windows macOS $ wget -O kubectl-vault https://github.com/kubevault/cli/releases/download/0.2.0/kubectl-vault-darwin-amd64 \ &amp;amp;&amp;amp; chmod +x kubectl-vault \ &amp;amp;&amp;amp; sudo mv kubectl-vault /usr/local/bin/ Linux $ wget -O kubectl-vault https://github.com/kubevault/cli/releases/download/0.2.0/kubectl-vault-linux-amd64 \ &amp;amp;&amp;amp; chmod +x kubectl-vault \ &amp;amp;&amp;amp; sudo mv kubectl-vault /usr/local/bin/ Windows Download the latest release v0.</description></item><item><title>Install KubeVault CLI</title><link>https://kubevault.com/docs/v0.3.0/setup/cli/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/cli/install/</guid><description>New to KubeVault? Please start here.
Installation Guide In order to install KubeVault CLI as kubectl-plugin, download the kubectl-vault binary and move it anywhere on you PATH.
macOS Linux Windows macOS $ wget -O kubectl-vault https://github.com/kubevault/cli/releases/download/v0.3.0/kubectl-vault-darwin-amd64 \ &amp;amp;&amp;amp; chmod +x kubectl-vault \ &amp;amp;&amp;amp; sudo mv kubectl-vault /usr/local/bin/ Linux $ wget -O kubectl-vault https://github.com/kubevault/cli/releases/download/v0.3.0/kubectl-vault-linux-amd64 \ &amp;amp;&amp;amp; chmod +x kubectl-vault \ &amp;amp;&amp;amp; sudo mv kubectl-vault /usr/local/bin/ Windows Download the latest release vv0.</description></item><item><title>Install KubeVault CLI</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/cli/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/cli/install/</guid><description>New to KubeVault? Please start here.
Installation Guide In order to install KubeVault CLI as kubectl-plugin, download the kubectl-vault binary and move it anywhere on you PATH.
macOS Linux Windows macOS $ wget -O kubectl-vault https://github.com/kubevault/cli/releases/download/v2020.07.09-beta.0/kubectl-vault-darwin-amd64 \ &amp;amp;&amp;amp; chmod +x kubectl-vault \ &amp;amp;&amp;amp; sudo mv kubectl-vault /usr/local/bin/ Linux $ wget -O kubectl-vault https://github.com/kubevault/cli/releases/download/v2020.07.09-beta.0/kubectl-vault-linux-amd64 \ &amp;amp;&amp;amp; chmod +x kubectl-vault \ &amp;amp;&amp;amp; sudo mv kubectl-vault /usr/local/bin/ Windows Download the latest release vv2020.</description></item><item><title>Install Vault CSI Driver</title><link>https://kubevault.com/docs/0.1.0/setup/csi-driver/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/csi-driver/install/</guid><description>New to KubeVault? Please start here.
Installation Guide Vault CSI driver can be installed via a script or as a Helm chart.
Script Helm Using Script To install Vault CSI driver in your Kubernetes cluster, run the following command:
# Kubernetes 1.12.x (CSI driver spec 0.3.0) $ curl -fsSL https://raw.githubusercontent.com/kubevault/csi-driver/0.1.0/hack/deploy/install.sh | bash After successful installation, you should have csi-vault-*** pod running in the kube-system namespace.</description></item><item><title>Install Vault CSI Driver</title><link>https://kubevault.com/docs/0.2.0/setup/csi-driver/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/csi-driver/install/</guid><description>New to KubeVault? Please start here.
Installation Guide Vault CSI driver can be installed via a script or as a Helm chart.
Script Helm Using Script To install Vault CSI driver in your Kubernetes cluster, run the following command:
# Kubernetes 1.13+ (CSI driver spec 1.0.0) $ curl -fsSL https://raw.githubusercontent.com/kubevault/csi-driver/0.2.0/hack/deploy/install.sh | bash After successful installation, you should have csi-vault-*** pod running in the kube-system namespace.</description></item><item><title>Install Vault CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/setup/csi-driver/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/csi-driver/install/</guid><description>New to KubeVault? Please start here.
Installation Guide Vault CSI driver can be installed via a script or as a Helm chart.
Helm 3 (Recommended) Helm 2 Script Using Helm 3 Vault CSI driver can be installed via Helm using the chart from AppsCode Charts Repository. To install the chart with the release name csi-vault
$ helm repo add appscode https://charts.appscode.com/stable/ $ helm repo update $ helm search repo appscode/csi-vault --version v0.</description></item><item><title>Install Vault CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/csi-driver/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/csi-driver/install/</guid><description>New to KubeVault? Please start here.
Installation Guide Vault CSI driver can be installed via a script or as a Helm chart.
Helm 3 (Recommended) Helm 2 Script Using Helm 3 Vault CSI driver can be installed via Helm using the chart from AppsCode Charts Repository. To install the chart with the release name csi-vault
$ helm repo add appscode https://charts.appscode.com/stable/ $ helm repo update $ helm search repo appscode/csi-vault --version v2020.</description></item><item><title>Install Vault operator</title><link>https://kubevault.com/docs/0.1.0/setup/operator/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/operator/install/</guid><description>New to KubeVault? Please start here.
Installation Guide Vault operator can be installed via a script or as a Helm chart.
Script Helm Using Script To install Vault operator in your Kubernetes cluster, run the following command:
$ curl -fsSL https://raw.githubusercontent.com/kubevault/operator/0.1.0/hack/deploy/install.sh | bash After successful installation, you should have a vault-operator-*** pod running in the kube-system namespace.
$ kubectl get pods -n kube-system | grep vault-operator vault-operator-846d47f489-jrb58 1/1 Running 0 48s Customizing Installer The installer script and associated yaml files can be found in the /hack/deploy folder.</description></item><item><title>Install Vault operator</title><link>https://kubevault.com/docs/0.2.0/setup/operator/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/operator/install/</guid><description>New to KubeVault? Please start here.
Installation Guide Vault operator can be installed via a script or as a Helm chart.
Script Helm Using Script To install Vault operator in your Kubernetes cluster, run the following command:
$ curl -fsSL https://raw.githubusercontent.com/kubevault/operator/0.2.0/hack/deploy/install.sh | bash After successful installation, you should have a vault-operator-*** pod running in the kube-system namespace.
$ kubectl get pods -n kube-system | grep vault-operator vault-operator-846d47f489-jrb58 1/1 Running 0 48s Customizing Installer The installer script and associated yaml files can be found in the /hack/deploy folder.</description></item><item><title>Install Vault operator</title><link>https://kubevault.com/docs/v0.3.0/setup/operator/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/operator/install/</guid><description>New to KubeVault? Please start here.
Installation Guide Vault operator can be installed via a script or as a Helm chart.
Helm 3 (Recommended) Helm 2 YAML Using Helm 3 Vault operator can be installed via Helm using the chart from AppsCode Charts Repository. To install the chart with the release name my-release:
$ helm repo add appscode https://charts.appscode.com/stable/ $ helm repo update $ helm search repo appscode/vault-operator --version v0.</description></item><item><title>Install Vault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/operator/install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/operator/install/</guid><description>New to KubeVault? Please start here.
Installation Guide Vault operator can be installed via a script or as a Helm chart.
Helm 3 (Recommended) Helm 2 YAML Using Helm 3 Vault operator can be installed via Helm using the chart from AppsCode Charts Repository. To install the chart with the release name my-release:
$ helm repo add appscode https://charts.appscode.com/stable/ $ helm repo update $ helm search repo appscode/vault-operator --version v2020.</description></item><item><title>Kubernetes Secret | Vault Unsealer</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/kubernetes_secret/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/kubernetes_secret/</guid><description>New to KubeVault? Please start here.
mode.kubernetesSecret To use kubernetesSecret mode specify mode.kubernetesSecret. In this mode, unseal keys and root token will be stored in Kubernetes secret.
spec: unsealer: mode: kubernetesSecret: secretName: &amp;lt;secret_name&amp;gt; mode.kubernetesSecret has following field:
kubernetesSecret.secretName kubernetesSecret.secretName is a required field that specifies the name of Kubernetes secret. If this secret does not exist, then Unsealer will create it. The secret will be created in the same namespace of VaultServer.</description></item><item><title>Kubernetes Secret | Vault Unsealer</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/kubernetes_secret/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/kubernetes_secret/</guid><description>New to KubeVault? Please start here.
mode.kubernetesSecret To use kubernetesSecret mode specify mode.kubernetesSecret. In this mode, unseal keys and root token will be stored in Kubernetes secret.
spec: unsealer: mode: kubernetesSecret: secretName: &amp;lt;secret_name&amp;gt; mode.kubernetesSecret has following field:
kubernetesSecret.secretName kubernetesSecret.secretName is a required field that specifies the name of Kubernetes secret. If this secret does not exist, then Unsealer will create it. The secret will be created in the same namespace of VaultServer.</description></item><item><title>Kubernetes Secret | Vault Unsealer</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/kubernetes_secret/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/kubernetes_secret/</guid><description>New to KubeVault? Please start here.
mode.kubernetesSecret To use kubernetesSecret mode specify mode.kubernetesSecret. In this mode, unseal keys and root token will be stored in a Kubernetes secret.
spec: unsealer: mode: kubernetesSecret: secretName: &amp;lt;secret_name&amp;gt; mode.kubernetesSecret has the following fields:
kubernetesSecret.secretName kubernetesSecret.secretName is a required field that specifies the name of the Kubernetes secret. If this secret does not exist, then Unsealer will create it. The secret will be created in the same namespace of VaultServer.</description></item><item><title>Kubernetes Secret | Vault Unsealer</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/kubernetes_secret/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/kubernetes_secret/</guid><description>New to KubeVault? Please start here.
mode.kubernetesSecret To use kubernetesSecret mode specify mode.kubernetesSecret. In this mode, unseal keys and root token will be stored in a Kubernetes secret.
spec: unsealer: mode: kubernetesSecret: secretName: &amp;lt;secret_name&amp;gt; mode.kubernetesSecret has the following fields:
kubernetesSecret.secretName kubernetesSecret.secretName is a required field that specifies the name of the Kubernetes secret. If this secret does not exist, then Unsealer will create it. The secret will be created in the same namespace of VaultServer.</description></item><item><title>KubeVault Concepts</title><link>https://kubevault.com/docs/0.1.0/concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/</guid><description>Concepts Concepts help you learn about the different parts of the KubeVault and the abstractions it uses.
Vault Operator Secret Engines Policy Management What is KubeVault? Overview. Provides a conceptual introduction to KubeVault operator, including the problems it solves and its high-level architecture. Custom Resource Definitions Vault Server. Introduces the concept of VaultServer for configuring a HashiCorp Vault server in a Kubernetes native way.</description></item><item><title>KubeVault Concepts</title><link>https://kubevault.com/docs/0.2.0/concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/</guid><description>Concepts Concepts help you learn about the different parts of the KubeVault and the abstractions it uses.
Vault Operator Secret Engines Policy Management What is KubeVault? Overview. Provides a conceptual introduction to KubeVault operator, including the problems it solves and its high-level architecture. Custom Resource Definitions Vault Server. Introduces the concept of VaultServer for configuring a HashiCorp Vault server in a Kubernetes native way.</description></item><item><title>KubeVault Concepts</title><link>https://kubevault.com/docs/v0.3.0/concepts/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/architecture/</guid><description>New to KubeVault? Please start here.
Architecture KubeVault operator is composed of the following controllers:
A Vault Server controller that deploys Vault in Kubernetes clusters. It also injects unsealer and stastd exporter as sidecars to perform unsealing and monitoring respectively.
An Auth controller that enables auth methods in Vault.
A Policy controller that manages Vault policies and also binds Vault policies with Kubernetes service accounts.</description></item><item><title>KubeVault Concepts</title><link>https://kubevault.com/docs/v0.3.0/concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/</guid><description>Concepts Concepts help you learn about the different parts of KubeVault and the abstractions it uses.
What is KubeVault? Overview. Provides an introduction to KubeVault operator, including the problems it solves and its use cases. Operator architecture. Provides a high-level illustration of the architecture of the KubeVault operator. Vault Server Secret Engines Vault Policies AppBinding Introduces a way to specify connection information, credential, and parameters that are necessary for communicating with an app or service.</description></item><item><title>KubeVault Concepts</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/architecture/</guid><description>New to KubeVault? Please start here.
Architecture KubeVault operator is composed of the following controllers:
A Vault Server controller that deploys Vault in Kubernetes clusters. It also injects unsealer and stastd exporter as sidecars to perform unsealing and monitoring respectively.
An Auth controller that enables auth methods in Vault.
A Policy controller that manages Vault policies and also binds Vault policies with Kubernetes service accounts.</description></item><item><title>KubeVault Concepts</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/</guid><description>Concepts Concepts help you learn about the different parts of KubeVault and the abstractions it uses.
What is KubeVault? Overview. Provides an introduction to KubeVault operator, including the problems it solves and its use cases. Operator architecture. Provides a high-level illustration of the architecture of the KubeVault operator. Vault Server Secret Engines Vault Policies AppBinding Introduces a way to specify connection information, credential, and parameters that are necessary for communicating with an app or service.</description></item><item><title>Manage AWS IAM Secrets using the KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/aws/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/aws/overview/</guid><description>New to KubeVault? Please start here.
Manage AWS IAM Secrets using the KubeVault operator The AWS secrets engine generates AWS access credentials dynamically based on IAM policies. The AWS IAM credentials are time-based and are automatically revoked when the Vault lease expires. You can easily manage the AWS secret engine using KubeVault operator.
You need to be familiar with the following CRDs:
AppBinding SecretEngine AWSRole AWSAccessKeyRequest Before you begin Install KubeVault operator in your cluster from here.</description></item><item><title>Manage AWS IAM Secrets using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/aws/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/aws/overview/</guid><description>New to KubeVault? Please start here.
Manage AWS IAM Secrets using the KubeVault operator The AWS secrets engine generates AWS access credentials dynamically based on IAM policies. The AWS IAM credentials are time-based and are automatically revoked when the Vault lease expires. You can easily manage the AWS secret engine using KubeVault operator.
You need to be familiar with the following CRDs:
AppBinding SecretEngine AWSRole AWSAccessKeyRequest Before you begin Install KubeVault operator in your cluster from here.</description></item><item><title>Manage AWS IAM Secrets using the Vault Operator</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/aws/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/aws/overview/</guid><description>New to KubeVault? Please start here.
Manage AWS IAM Secrets using the Vault Operator You can easily manage AWS secret engine using Vault operator.
You should be familiar with the following CRD:
AWSRole AWSAccessKeyRequest AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage AWS IAM Secrets using the Vault Operator</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/aws/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/aws/overview/</guid><description>New to KubeVault? Please start here.
Manage AWS IAM Secrets using the Vault Operator You can easily manage AWS secret engine using Vault operator.
You should be familiar with the following CRD:
AWSRole AWSAccessKeyRequest AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage Azure service principals using the KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/azure/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/azure/overview/</guid><description>New to KubeVault? Please start here.
Manage Azure service principals using the KubeVault operator The Azure secrets engine dynamically generates Azure service principals and role assignments. Vault roles can be mapped to one or more Azure roles, providing a simple, flexible way to manage the permissions granted to generated service principals. You can easily manage the Azure secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:</description></item><item><title>Manage Azure service principals using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/overview/</guid><description>New to KubeVault? Please start here.
Manage Azure service principals using the KubeVault operator The Azure secrets engine dynamically generates Azure service principals and role assignments. Vault roles can be mapped to one or more Azure roles, providing a simple, flexible way to manage the permissions granted to generated service principals. You can easily manage the Azure secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:</description></item><item><title>Manage External Vault using KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/platforms/external-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/platforms/external-vault/</guid><description>New to KubeVault? Please start here.
Manage External Vault using KubeVault operator The KubeVault operator can manage policies and secret engines of Vault servers which are not provisioned by the KubeVault operator. These Vault servers can be running outside a Kubernetes cluster or running inside a Kubernetes cluster but provisioned using a Helm chart.
The KubeVault operator can perform the following operations for externally provisioned Vault servers:
Manage Vault policy using VaultPolicy and VaultPolicyBinding.</description></item><item><title>Manage External Vault using KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/external-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/external-vault/</guid><description>New to KubeVault? Please start here.
Manage External Vault using KubeVault operator The KubeVault operator can manage policies and secret engines of Vault servers which are not provisioned by the KubeVault operator. These Vault servers can be running outside a Kubernetes cluster or running inside a Kubernetes cluster but provisioned using a Helm chart.
The KubeVault operator can perform the following operations for externally provisioned Vault servers:
Manage Vault policy using VaultPolicy and VaultPolicyBinding.</description></item><item><title>Manage External Vault using Vault Operator</title><link>https://kubevault.com/docs/0.1.0/guides/platforms/external-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/platforms/external-vault/</guid><description>New to KubeVault? Please start here.
Manage External Vault using Vault Operator You can manage external Vault (not deployed by Vault operator) by Vault operator. You can do following operations using Vault operator:
Manage Vault policy using VaultPolicy and VaultPolicyBinding. Guides can be found here.
Manage AWS secret engine using AWSRole and AWSAccessKeyRequest. Guides can be found here.
Manage PostgreSQL Database secret engine using PostgresRole and DatabaseAccessRequest.</description></item><item><title>Manage External Vault using Vault Operator</title><link>https://kubevault.com/docs/0.2.0/guides/platforms/external-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/platforms/external-vault/</guid><description>New to KubeVault? Please start here.
Manage External Vault using Vault Operator You can manage external Vault (not deployed by Vault operator) by Vault operator. You can do following operations using Vault operator:
Manage Vault policy using VaultPolicy and VaultPolicyBinding. Guides can be found here.
Manage AWS secret engine using AWSRole and AWSAccessKeyRequest. Guides can be found here.
Manage PostgreSQL Database secret engine using PostgresRole and DatabaseAccessRequest.</description></item><item><title>Manage GCP IAM Secrets using the KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/gcp/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/gcp/overview/</guid><description>New to KubeVault? Please start here.
Manage GCP IAM Secrets using the KubeVault operator The Google Cloud Vault secrets engine dynamically generates Google Cloud service account keys and OAuth tokens based on IAM policies. This enables users to gain access to Google Cloud resources without needing to create or manage a dedicated service account. You can easily manage GCP secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:</description></item><item><title>Manage GCP IAM Secrets using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/gcp/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/gcp/overview/</guid><description>New to KubeVault? Please start here.
Manage GCP IAM Secrets using the KubeVault operator The Google Cloud Vault secrets engine dynamically generates Google Cloud service account keys and OAuth tokens based on IAM policies. This enables users to gain access to Google Cloud resources without needing to create or manage a dedicated service account. You can easily manage GCP secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:</description></item><item><title>Manage Key/Value Secrets using the KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/kv/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/kv/overview/</guid><description>New to KubeVault? Please start here.
Manage Key/Value Secrets using the KubeVault operator You can easily manage KV secret engine using the KubeVault operator.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding Before you begin Install KubeVault operator in your cluster from here. To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.
$ kubectl create ns demo namespace/demo created In this tutorial, we are going to demonstrate the use of the KV secret engine.</description></item><item><title>Manage Key/Value Secrets using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/kv/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/kv/overview/</guid><description>New to KubeVault? Please start here.
Manage Key/Value Secrets using the KubeVault operator You can easily manage KV secret engine using the KubeVault operator.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding Before you begin Install KubeVault operator in your cluster from here. To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.
$ kubectl create ns demo namespace/demo created In this tutorial, we are going to demonstrate the use of the KV secret engine.</description></item><item><title>Manage Key/Value Secrets using the Vault Operator</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/kv/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/kv/overview/</guid><description>New to KubeVault? Please start here.
Manage Key/Value Secrets using the Vault Operator You can easily manage KV secret engine using Vault operator.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage Key/Value Secrets using the Vault Operator</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/kv/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/kv/overview/</guid><description>New to KubeVault? Please start here.
Manage Key/Value Secrets using the Vault Operator You can easily manage KV secret engine using Vault operator.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage MongoDB credentials using the KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/mongodb/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/mongodb/overview/</guid><description>New to KubeVault? Please start here.
Manage MongoDB credentials using the KubeVault operator MongoDB is one of the supported plugins for the database secrets engine. This plugin generates database credentials dynamically based on configured roles for the MongoDB database. You can easily manage MongoDB secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:
AppBinding SecretEngine MongoDBRole DatabaseAccessRequest Before you begin Install KubeVault operator in your cluster from here.</description></item><item><title>Manage MongoDB credentials using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/mongodb/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/mongodb/overview/</guid><description>New to KubeVault? Please start here.
Manage MongoDB credentials using the KubeVault operator MongoDB is one of the supported plugins for the database secrets engine. This plugin generates database credentials dynamically based on configured roles for the MongoDB database. You can easily manage MongoDB secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:
AppBinding SecretEngine MongoDBRole DatabaseAccessRequest Before you begin Install KubeVault operator in your cluster from here.</description></item><item><title>Manage MongoDB credentials using the Vault Operator</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/mongodb/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/mongodb/overview/</guid><description>New to KubeVault? Please start here.
Manage MongoDB credentials using the Vault Operator You can easily manage MongoDB Database secret engine using Vault operator.
You should be familiar with the following CRD:
MongoDBRole DatabaseAccessRequest AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage MongoDB credentials using the Vault Operator</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/mongodb/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/mongodb/overview/</guid><description>New to KubeVault? Please start here.
Manage MongoDB credentials using the Vault Operator You can easily manage MongoDB Database secret engine using Vault operator.
You should be familiar with the following CRD:
MongoDBRole DatabaseAccessRequest AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage MySQL/MariaDB credentials using the KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/mysql/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/mysql/overview/</guid><description>New to KubeVault? Please start here.
Manage MySQL/MariaDB credentials using the KubeVault operator MySQL is one of the supported plugins for the database secrets engine. This plugin generates database credentials dynamically based on configured roles for the MySQL database, and also supports Static Roles. You can easily manage MySQL Database secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:
AppBinding SecretEngine MySQLRole DatabaseAccessRequest Before you begin Install KubeVault operator in your cluster from here.</description></item><item><title>Manage MySQL/MariaDB credentials using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/mysql/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/mysql/overview/</guid><description>New to KubeVault? Please start here.
Manage MySQL/MariaDB credentials using the KubeVault operator MySQL is one of the supported plugins for the database secrets engine. This plugin generates database credentials dynamically based on configured roles for the MySQL database, and also supports Static Roles. You can easily manage MySQL Database secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:
AppBinding SecretEngine MySQLRole DatabaseAccessRequest Before you begin Install KubeVault operator in your cluster from here.</description></item><item><title>Manage MySQL/MariaDB credentials using the Vault Operator</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/mysql/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/mysql/overview/</guid><description>New to KubeVault? Please start here.
Manage MySQL/MariaDB credentials using the Vault Operator You can easily manage MySQL Database secret engine using Vault operator.
You should be familiar with the following CRD:
MySQLRole DatabaseAccessRequest AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage MySQL/MariaDB credentials using the Vault Operator</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/mysql/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/mysql/overview/</guid><description>New to KubeVault? Please start here.
Manage MySQL/MariaDB credentials using the Vault Operator You can easily manage MySQL Database secret engine using Vault operator.
You should be familiar with the following CRD:
MySQLRole DatabaseAccessRequest AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage PKI(certificates) secrets using the KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/pki/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/pki/overview/</guid><description>New to KubeVault? Please start here.
Manage PKI(certificates) secrets using the KubeVault operator The PKI secrets engine generates dynamic X.509 certificates. With this secrets engine, services can get certificates without going through the usual manual process of generating a private key and CSR, submitting to a CA, and waiting for a verification and signing process to complete. Vault&amp;rsquo;s built-in authentication and authorization mechanisms provide the verification functionality.
You can easily manage PKI secret engine using the KubeVault operator.</description></item><item><title>Manage PKI(certificates) secrets using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/pki/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/pki/overview/</guid><description>New to KubeVault? Please start here.
Manage PKI(certificates) secrets using the KubeVault operator The PKI secrets engine generates dynamic X.509 certificates. With this secrets engine, services can get certificates without going through the usual manual process of generating a private key and CSR, submitting to a CA, and waiting for a verification and signing process to complete. Vault&amp;rsquo;s built-in authentication and authorization mechanisms provide the verification functionality.
You can easily manage PKI secret engine using the KubeVault operator.</description></item><item><title>Manage PKI(certificates) secrets using the Vault Operator</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/pki/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/pki/overview/</guid><description>New to KubeVault? Please start here.
Manage PKI(certificates) secrets using the Vault Operator You can easily manage PKI secret engine using Vault operator.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage PKI(certificates) secrets using the Vault Operator</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/pki/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/pki/overview/</guid><description>New to KubeVault? Please start here.
Manage PKI(certificates) secrets using the Vault Operator You can easily manage PKI secret engine using Vault operator.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage PostgreSQL credentials using the KubeVault operator</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/postgres/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/postgres/overview/</guid><description>New to KubeVault? Please start here.
Manage PostgreSQL Credentials Using the KubeVault Operator PostgreSQL is one of the supported plugins for the database secrets engine. This plugin generates database credentials dynamically based on configured roles for the PostgreSQL database, and also supports Static Roles. You can easily manage PostgreSQL Database secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:
AppBinding SecretEngine PostgresRole DatabaseAccessRequest Before you begin Install KubeVault operator in your cluster from here.</description></item><item><title>Manage PostgreSQL credentials using the KubeVault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/postgres/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/postgres/overview/</guid><description>New to KubeVault? Please start here.
Manage PostgreSQL Credentials Using the KubeVault Operator PostgreSQL is one of the supported plugins for the database secrets engine. This plugin generates database credentials dynamically based on configured roles for the PostgreSQL database, and also supports Static Roles. You can easily manage PostgreSQL Database secret engine using the KubeVault operator.
You need to be familiar with the following CRDs:
AppBinding SecretEngine PostgresRole DatabaseAccessRequest Before you begin Install KubeVault operator in your cluster from here.</description></item><item><title>Manage PostgreSQL credentials using the Vault Operator</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/postgres/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/postgres/overview/</guid><description>New to KubeVault? Please start here.
Manage PostgreSQL credentials using the Vault Operator You can easily manage PostgreSQL Database secret engine using Vault operator.
You should be familiar with the following CRD:
PostgresRole DatabaseAccessRequest AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Manage PostgreSQL credentials using the Vault Operator</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/postgres/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/postgres/overview/</guid><description>New to KubeVault? Please start here.
Manage PostgreSQL credentials using the Vault Operator You can easily manage PostgreSQL Database secret engine using Vault operator.
You should be familiar with the following CRD:
PostgresRole DatabaseAccessRequest AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Managing Externally Provisioned Vault Servers</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/auth-methods/overview/</guid><description>New to KubeVault? Please start here.
Managing Externally Provisioned Vault Servers The KubeVault operator can manage policies and secret engines of Vault servers which are not provisioned by the KubeVault operator. These Vault servers can be running outside a Kubernetes cluster or running inside a Kubernetes cluster but provisioned using a Helm chart.
The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. Following authentication methods are currently supported by the KubeVault operator:</description></item><item><title>Managing Externally Provisioned Vault Servers</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/auth-methods/overview/</guid><description>New to KubeVault? Please start here.
Managing Externally Provisioned Vault Servers The KubeVault operator can manage policies and secret engines of Vault servers which are not provisioned by the KubeVault operator. These Vault servers can be running outside a Kubernetes cluster or running inside a Kubernetes cluster but provisioned using a Helm chart.
The KubeVault operator uses an AppBinding to connect to an externally provisioned Vault server. Following authentication methods are currently supported by the KubeVault operator:</description></item><item><title>MongoDBRole | Vault Secret Engine</title><link>https://kubevault.com/docs/0.1.0/concepts/database-crds/mongodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/database-crds/mongodb/</guid><description>New to KubeVault? Please start here.
MongoDBRole CRD Vault operator will create database connection config and role according to MongoDBRole CRD (CustomResourceDefinition) specification. If the user deletes the MongoDBRole CRD, then respective role will also be deleted from Vault.
apiVersion: authorization.kubedb.com/v1alpha1 kind: MongoDBRole metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of the role in Vault will follow this format: k8s.</description></item><item><title>MongoDBRole | Vault Secret Engine</title><link>https://kubevault.com/docs/0.2.0/concepts/database-crds/mongodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/database-crds/mongodb/</guid><description>New to KubeVault? Please start here.
MongoDBRole CRD Vault operator will create database connection config and role according to MongoDBRole CRD (CustomResourceDefinition) specification. If the user deletes the MongoDBRole CRD, then respective role will also be deleted from Vault.
apiVersion: authorization.kubedb.com/v1alpha1 kind: MongoDBRole metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of the role in Vault will follow this format: k8s.</description></item><item><title>MongoDBRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/mongodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/mongodb/</guid><description>New to KubeVault? Please start here.
MongoDBRole What is MongoDBRole A MongoDBRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a MongoDB database secret engine role in a Kubernetes native way.
When a MongoDBRole is created, the KubeVault operator creates a Vault role according to the specification. If the user deletes the MongoDBRole CRD, then the respective role will also be deleted from Vault.
MongoDBRole CRD Specification Like any official Kubernetes resource, a MongoDBRole object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>MongoDBRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/database-secret-engine/mongodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/database-secret-engine/mongodb/</guid><description>New to KubeVault? Please start here.
MongoDBRole What is MongoDBRole A MongoDBRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a MongoDB database secret engine role in a Kubernetes native way.
When a MongoDBRole is created, the KubeVault operator creates a Vault role according to the specification. If the user deletes the MongoDBRole CRD, then the respective role will also be deleted from Vault.
MongoDBRole CRD Specification Like any official Kubernetes resource, a MongoDBRole object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>Monitor KubeVault operator using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-operator/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-operator/builtin/</guid><description>New to KubeVault? Please start here.
Monitor KubeVault operator with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scraper to monitor KubeVault operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.
To keep Prometheus resources isolated, we are going to use a separate namespace to deploy Prometheus server.</description></item><item><title>Monitor KubeVault operator using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-operator/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-operator/builtin/</guid><description>New to KubeVault? Please start here.
Monitor KubeVault operator with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scraper to monitor KubeVault operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.
To keep Prometheus resources isolated, we are going to use a separate namespace to deploy Prometheus server.</description></item><item><title>Monitor KubeVault operator using Prometheus Operator</title><link>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-operator/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-operator/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring KubeVault operator Using Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use CoreOS Prometheus operator for monitoring KubeVault operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.</description></item><item><title>Monitor KubeVault operator using Prometheus Operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-operator/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-operator/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring KubeVault operator Using Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use CoreOS Prometheus operator for monitoring KubeVault operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.</description></item><item><title>Monitor Vault CSI Driver using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/0.1.0/guides/monitoring/csi-driver/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/monitoring/csi-driver/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault CSI Driver with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scrapper to monitor Vault CSI driver.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.</description></item><item><title>Monitor Vault CSI Driver using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/0.2.0/guides/monitoring/csi-driver/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/monitoring/csi-driver/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault CSI Driver with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scrapper to monitor Vault CSI driver.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.</description></item><item><title>Monitor Vault CSI Driver using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/v0.3.0/guides/monitoring/csi-driver/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/monitoring/csi-driver/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault CSI Driver with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scraper to monitor Vault CSI driver.
Before You Begin At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.</description></item><item><title>Monitor Vault CSI Driver using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/csi-driver/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/csi-driver/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault CSI Driver with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scraper to monitor Vault CSI driver.
Before You Begin At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind.</description></item><item><title>Monitor Vault CSI Driver using CoreOS Prometheus Operator</title><link>https://kubevault.com/docs/0.1.0/guides/monitoring/csi-driver/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/monitoring/csi-driver/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault CSI Driver Using CoreOS Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use CoreOS Prometheus operator for monitoring Vault CSI driver.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Monitor Vault CSI Driver using CoreOS Prometheus Operator</title><link>https://kubevault.com/docs/0.2.0/guides/monitoring/csi-driver/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/monitoring/csi-driver/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault CSI Driver Using CoreOS Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use CoreOS Prometheus operator for monitoring Vault CSI driver.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Monitor Vault CSI Driver using Prometheus Operator</title><link>https://kubevault.com/docs/v0.3.0/guides/monitoring/csi-driver/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/monitoring/csi-driver/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault CSI Driver Using Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use CoreOS Prometheus operator for monitoring Vault CSI driver.
Before You Begin At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Monitor Vault CSI Driver using Prometheus Operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/csi-driver/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/csi-driver/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault CSI Driver Using Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use CoreOS Prometheus operator for monitoring Vault CSI driver.
Before You Begin At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Monitor Vault Operator using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-operator/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-operator/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault operator with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scrapper to monitor Vault operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep Prometheus resources isolated, we are going to use a separate namespace to deploy Prometheus server.</description></item><item><title>Monitor Vault Operator using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-operator/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-operator/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault operator with builtin Prometheus This tutorial will show you how to configure builtin Prometheus scrapper to monitor Vault operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep Prometheus resources isolated, we are going to use a separate namespace to deploy Prometheus server.</description></item><item><title>Monitor Vault Operator using CoreOS Prometheus Operator</title><link>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-operator/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-operator/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault Operator Using CoreOS Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use CoreOS Prometheus operator for monitoring Vault operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Monitor Vault Operator using CoreOS Prometheus Operator</title><link>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-operator/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-operator/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault Operator Using CoreOS Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to use CoreOS Prometheus operator for monitoring Vault operator.
Before You Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster.</description></item><item><title>Monitor Vault Server using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-server/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-server/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault server with builtin Prometheus The prometheus server is needed to configure so that it can discover endpoints of services. If a Prometheus server is already running in cluster and if it is configured in a way that it can discover service endpoints, no extra configuration will be needed.
If there is no existing Prometheus server running, read this tutorial to see how to create a builtin Prometheus server with appropriate configuration.</description></item><item><title>Monitor Vault Server using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-server/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-server/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault server with builtin Prometheus The prometheus server is needed to configure so that it can discover endpoints of services. If a Prometheus server is already running in cluster and if it is configured in a way that it can discover service endpoints, no extra configuration will be needed.
If there is no existing Prometheus server running, read this tutorial to see how to create a builtin Prometheus server with appropriate configuration.</description></item><item><title>Monitor Vault Server using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-server/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-server/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault server with builtin Prometheus scraper This tutorial will show you how to configure builtin Prometheus scraper to monitor Vault server provisioned by the KubeVault operator.
The prometheus server is needed to configure so that it can discover endpoints of Kubernetes services. If a Prometheus server is already running in cluster and if it is configured in a way that it can discover service endpoints, no extra configuration will be needed.</description></item><item><title>Monitor Vault Server using Builtin Prometheus Discovery</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-server/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-server/builtin/</guid><description>New to KubeVault? Please start here.
Monitor Vault server with builtin Prometheus scraper This tutorial will show you how to configure builtin Prometheus scraper to monitor Vault server provisioned by the KubeVault operator.
The prometheus server is needed to configure so that it can discover endpoints of Kubernetes services. If a Prometheus server is already running in cluster and if it is configured in a way that it can discover service endpoints, no extra configuration will be needed.</description></item><item><title>Monitor Vault Server using CoreOS Prometheus Operator</title><link>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-server/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/monitoring/vault-server/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault Server Using CoreOS Prometheus Operator The prometheus server is needed to configure so that it can discover endpoints of services. If a Prometheus server is already running in cluster and if it is configured in a way that it can discover service endpoints, no extra configuration will be needed.
If there is no existing Prometheus server running, read this tutorial to see how to install CoreOS Prometheus Operator.</description></item><item><title>Monitor Vault Server using CoreOS Prometheus Operator</title><link>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-server/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/monitoring/vault-server/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault Server Using CoreOS Prometheus Operator The prometheus server is needed to configure so that it can discover endpoints of services. If a Prometheus server is already running in cluster and if it is configured in a way that it can discover service endpoints, no extra configuration will be needed.
If there is no existing Prometheus server running, read this tutorial to see how to install CoreOS Prometheus Operator.</description></item><item><title>Monitor Vault Server using Prometheus Operator</title><link>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-server/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/monitoring/vault-server/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault Server Using Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to monitor Vault server using Prometheus via Prometheus Operator).
Monitor Vault server To enable monitoring, configure spec.monitor field in a VaultServer custom resource. Below is an example:
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: exampleco namespace: demo spec: replicas: 1 version: &amp;#34;1.</description></item><item><title>Monitor Vault Server using Prometheus Operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-server/coreos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/vault-server/coreos/</guid><description>New to KubeVault? Please start here.
Monitoring Vault Server Using Prometheus Operator CoreOS prometheus-operator provides simple and Kubernetes native way to deploy and configure Prometheus server. This tutorial will show you how to monitor Vault server using Prometheus via Prometheus Operator).
Monitor Vault server To enable monitoring, configure spec.monitor field in a VaultServer custom resource. Below is an example:
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: exampleco namespace: demo spec: replicas: 1 version: &amp;#34;1.</description></item><item><title>Monitoring Overview | KubeVault</title><link>https://kubevault.com/docs/0.1.0/guides/monitoring/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/monitoring/overview/</guid><description>New to KubeVault? Please start here.
Monitoring Vault Server Vault operator has native support for monitoring via Prometheus. You can use builtin Prometheus scrapper or CoreOS Prometheus Operator to monitor Vault operator. This tutorial will show you how this monitoring works with Vault operator and how to enable them.
Overview By default the Vault operator will configure each vault pod to publish statsd metrics. The Vault operator runs a statsd-exporter container as sidecar to convert and expose those metrics in the format for Prometheus.</description></item><item><title>Monitoring Overview | KubeVault</title><link>https://kubevault.com/docs/0.2.0/guides/monitoring/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/monitoring/overview/</guid><description>New to KubeVault? Please start here.
Monitoring Vault Server Vault operator has native support for monitoring via Prometheus. You can use builtin Prometheus scrapper or CoreOS Prometheus Operator to monitor Vault operator. This tutorial will show you how this monitoring works with Vault operator and how to enable them.
Overview By default the Vault operator will configure each vault pod to publish statsd metrics. The Vault operator runs a statsd-exporter container as sidecar to convert and expose those metrics in the format for Prometheus.</description></item><item><title>Monitoring Overview | KubeVault</title><link>https://kubevault.com/docs/v0.3.0/guides/monitoring/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/monitoring/overview/</guid><description>New to KubeVault? Please start here.
Monitoring KubeVault Components KubeVault operator has native support for monitoring via Prometheus. You can use builtin Prometheus scraper or Prometheus Operator to monitor KubeVault operator. This tutorial will show you how this monitoring works with KubeVault operator and how to enable them.
Vault Server Metrics By default the KubeVault operator will configure each vault pod to publish statsd metrics. The KubeVault operator runs a statsd-exporter container as sidecar to convert and expose those metrics in Prometheus format.</description></item><item><title>Monitoring Overview | KubeVault</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/monitoring/overview/</guid><description>New to KubeVault? Please start here.
Monitoring KubeVault Components KubeVault operator has native support for monitoring via Prometheus. You can use builtin Prometheus scraper or Prometheus Operator to monitor KubeVault operator. This tutorial will show you how this monitoring works with KubeVault operator and how to enable them.
Vault Server Metrics By default the KubeVault operator will configure each vault pod to publish statsd metrics. The KubeVault operator runs a statsd-exporter container as sidecar to convert and expose those metrics in Prometheus format.</description></item><item><title>Mount AWS IAM Secrets into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/aws/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/aws/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount AWS IAM Secrets into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount AWS IAM Secrets into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/aws/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/aws/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount AWS IAM Secrets into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount AWS IAM Secrets using CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/aws/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/aws/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount AWS IAM Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount AWS IAM Secrets using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/aws/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/aws/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount AWS IAM Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount Azure Secrets into Kubernetes a Pod using CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/azure/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/azure/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount Azure Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount Azure Secrets into Kubernetes a Pod using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/azure/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount Azure Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount GCP Secrets using CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/gcp/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/gcp/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount GCP Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount GCP Secrets using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/gcp/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/gcp/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount GCP Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount Key/Value Secrets into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/kv/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/kv/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount Key/Value Secrets into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount Key/Value Secrets into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/kv/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/kv/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount Key/Value Secrets into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount Key/Value Secrets using CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/kv/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/kv/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount Key/Value Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount Key/Value Secrets using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/kv/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/kv/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount Key/Value Secrets using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount MongoDB credentials into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/mongodb/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/mongodb/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount MongoDB credentials into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount MongoDB credentials into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/mongodb/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/mongodb/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount MongoDB credentials into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount MongoDB credentials using CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/mongodb/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/mongodb/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount MongoDB credentials using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount MongoDB credentials using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/mongodb/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/mongodb/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount MongoDB credentials using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount MySQL/MariaDB credentials into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/mysql/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/mysql/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount MySQL/MariaDB credentials into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount MySQL/MariaDB credentials into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/mysql/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/mysql/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount MySQL/MariaDB credentials into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount MySQL/MariaDB credentials using CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/mysql/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/mysql/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount MySQL/MariaDB credentials using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount MySQL/MariaDB credentials using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/mysql/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/mysql/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount MySQL/MariaDB credentials using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount PKI(certificates) Secrets into Kubernetse pod using CSI Driver</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/pki/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/pki/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount PKI(certificates) Secrets into Kubernetse pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount PKI(certificates) Secrets into Kubernetse pod using CSI Driver</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/pki/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/pki/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount PKI(certificates) Secrets into Kubernetse pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount PKI(certificates) Secrets into Kubernetse pod using CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/pki/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/pki/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount PKI(certificates) Secrets into Kubernetse pod using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.</description></item><item><title>Mount PKI(certificates) Secrets into Kubernetse pod using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/pki/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/pki/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount PKI(certificates) Secrets into Kubernetse pod using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.</description></item><item><title>Mount PostgreSQL credentials into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.1.0/guides/secret-engines/postgres/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/secret-engines/postgres/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount PostgreSQL credentials into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount PostgreSQL credentials into Kubernetes pod using CSI Driver</title><link>https://kubevault.com/docs/0.2.0/guides/secret-engines/postgres/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/secret-engines/postgres/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount PostgreSQL credentials into Kubernetes pod using CSI Driver Before you Begin At first, you need to have a Kubernetes cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using Minikube.
To keep things isolated, this tutorial uses a separate namespace called demo throughout this tutorial.</description></item><item><title>Mount PostgreSQL credentials using CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/guides/secret-engines/postgres/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/secret-engines/postgres/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount PostgreSQL credentials using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>Mount PostgreSQL credentials using CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/postgres/csi-driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/secret-engines/postgres/csi-driver/</guid><description>New to KubeVault? Please start here.
Mount PostgreSQL credentials using CSI Driver At first, you need to have a Kubernetes 1.14 or later cluster, and the kubectl command-line tool must be configured to communicate with your cluster. If you do not already have a cluster, you can create one by using kind. To check the version of your cluster, run:
$ kubectl version --short Client Version: v1.16.2 Server Version: v1.</description></item><item><title>MySQL | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/mysql/</guid><description>New to KubeVault? Please start here.
MySQL In MySQL storage backend, data will be stored in MySQL. Vault documentation for MySQL storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-mysql namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: mySQL: address: &amp;#34;my.mysql.com:3306&amp;#34; userCredentialSecret: &amp;#34;mysql-cred&amp;#34; spec.backend.mySQL To use MySQL as backend storage in Vault specify spec.backend.mySQL in VaultServer CRD.
spec: backend: mySQL: address: &amp;lt;address&amp;gt; database: &amp;lt;database_name&amp;gt; table: &amp;lt;table_name&amp;gt; userCredentialSecret: &amp;lt;secret_name&amp;gt; tlsCASecret: &amp;lt;secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; spec.</description></item><item><title>MySQL | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/mysql/</guid><description>New to KubeVault? Please start here.
MySQL In MySQL storage backend, data will be stored in MySQL. Vault documentation for MySQL storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-mysql namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: mySQL: address: &amp;#34;my.mysql.com:3306&amp;#34; userCredentialSecret: &amp;#34;mysql-cred&amp;#34; spec.backend.mySQL To use MySQL as backend storage in Vault specify spec.backend.mySQL in VaultServer CRD.
spec: backend: mySQL: address: &amp;lt;address&amp;gt; database: &amp;lt;database_name&amp;gt; table: &amp;lt;table_name&amp;gt; userCredentialSecret: &amp;lt;secret_name&amp;gt; tlsCASecret: &amp;lt;secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; spec.</description></item><item><title>MySQL | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/mysql/</guid><description>New to KubeVault? Please start here.
MySQL In MySQL storage backend, Vault data will be stored in MySQL. Vault documentation for MySQL storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-mysql namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: mysql: address: &amp;#34;my.mysql.com:3306&amp;#34; userCredentialSecret: &amp;#34;mysql-cred&amp;#34; spec.backend.mysql To use MySQL as backend storage in Vault, specify spec.backend.mysql in VaultServer CRD.
spec: backend: mysql: address: &amp;lt;address&amp;gt; database: &amp;lt;database_name&amp;gt; table: &amp;lt;table_name&amp;gt; userCredentialSecret: &amp;lt;secret_name&amp;gt; tlsCASecret: &amp;lt;secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>MySQL | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/mysql/</guid><description>New to KubeVault? Please start here.
MySQL In MySQL storage backend, Vault data will be stored in MySQL. Vault documentation for MySQL storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-mysql namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: mysql: address: &amp;#34;my.mysql.com:3306&amp;#34; userCredentialSecret: &amp;#34;mysql-cred&amp;#34; spec.backend.mysql To use MySQL as backend storage in Vault, specify spec.backend.mysql in VaultServer CRD.
spec: backend: mysql: address: &amp;lt;address&amp;gt; database: &amp;lt;database_name&amp;gt; table: &amp;lt;table_name&amp;gt; userCredentialSecret: &amp;lt;secret_name&amp;gt; tlsCASecret: &amp;lt;secret_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>MySQLRole | Vault Secret Engine</title><link>https://kubevault.com/docs/0.1.0/concepts/database-crds/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/database-crds/mysql/</guid><description>New to KubeVault? Please start here.
MySQLRole CRD Vault operator will create database connection config and role according to MySQLRole CRD (CustomResourceDefinition) specification. If the user deletes the MySQLRole CRD, then respective role will also be deleted from Vault.
apiVersion: authorization.kubedb.com/v1alpha1 kind: MySQLRole metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of the role in Vault will follow this format: k8s.</description></item><item><title>MySQLRole | Vault Secret Engine</title><link>https://kubevault.com/docs/0.2.0/concepts/database-crds/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/database-crds/mysql/</guid><description>New to KubeVault? Please start here.
MySQLRole CRD Vault operator will create database connection config and role according to MySQLRole CRD (CustomResourceDefinition) specification. If the user deletes the MySQLRole CRD, then respective role will also be deleted from Vault.
apiVersion: authorization.kubedb.com/v1alpha1 kind: MySQLRole metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of the role in Vault will follow this format: k8s.</description></item><item><title>MySQLRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/mysql/</guid><description>New to KubeVault? Please start here.
MySQLRole What is MySQLRole A MySQLRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a database secret engine role in a Kubernetes native way.
When a MySQLRole is created, the KubeVault operator creates a role according to the specification. If the user deletes the MySQLRole CRD, then the respective role will also be deleted from Vault.
MySQLRole CRD Specification Like any official Kubernetes resource, a MySQLRole object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>MySQLRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/database-secret-engine/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/database-secret-engine/mysql/</guid><description>New to KubeVault? Please start here.
MySQLRole What is MySQLRole A MySQLRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a database secret engine role in a Kubernetes native way.
When a MySQLRole is created, the KubeVault operator creates a role according to the specification. If the user deletes the MySQLRole CRD, then the respective role will also be deleted from Vault.
MySQLRole CRD Specification Like any official Kubernetes resource, a MySQLRole object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>OpenStack Swift | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/swift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/swift/</guid><description>New to KubeVault? Please start here.
Swift In Swift storage backend, data will be stored in OpenStack Swift Container. Vault documentation for Swift storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-swift namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: swift: authUrl: &amp;#34;https://auth.cloud.ovh.net/v2.0/&amp;#34; container: &amp;#34;my-vault-container&amp;#34; credentialSecret: &amp;#34;os-credential&amp;#34; region: &amp;#34;BHS1&amp;#34; tenant: &amp;#34;123456789999&amp;#34; spec.backend.swift To use Swift as backend storage in Vault specify spec.backend.swift in VaultServer CRD.</description></item><item><title>OpenStack Swift | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/swift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/swift/</guid><description>New to KubeVault? Please start here.
Swift In Swift storage backend, data will be stored in OpenStack Swift Container. Vault documentation for Swift storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-swift namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: swift: authUrl: &amp;#34;https://auth.cloud.ovh.net/v2.0/&amp;#34; container: &amp;#34;my-vault-container&amp;#34; credentialSecret: &amp;#34;os-credential&amp;#34; region: &amp;#34;BHS1&amp;#34; tenant: &amp;#34;123456789999&amp;#34; spec.backend.swift To use Swift as backend storage in Vault specify spec.backend.swift in VaultServer CRD.</description></item><item><title>OpenStack Swift | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/swift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/swift/</guid><description>New to KubeVault? Please start here.
Swift In Swift storage backend, Vault data will be stored in OpenStack Swift Container. Vault documentation for Swift storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-swift namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: swift: authURL: &amp;#34;https://auth.cloud.ovh.net/v2.0/&amp;#34; container: &amp;#34;my-vault-container&amp;#34; credentialSecret: &amp;#34;os-credential&amp;#34; region: &amp;#34;BHS1&amp;#34; tenant: &amp;#34;123456789999&amp;#34; spec.backend.swift To use Swift as backend storage in Vault specify spec.backend.swift in VaultServer CRD.</description></item><item><title>OpenStack Swift | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/swift/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/swift/</guid><description>New to KubeVault? Please start here.
Swift In Swift storage backend, Vault data will be stored in OpenStack Swift Container. Vault documentation for Swift storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-swift namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: swift: authURL: &amp;#34;https://auth.cloud.ovh.net/v2.0/&amp;#34; container: &amp;#34;my-vault-container&amp;#34; credentialSecret: &amp;#34;os-credential&amp;#34; region: &amp;#34;BHS1&amp;#34; tenant: &amp;#34;123456789999&amp;#34; spec.backend.swift To use Swift as backend storage in Vault specify spec.backend.swift in VaultServer CRD.</description></item><item><title>Overview of Vault CSI Driver</title><link>https://kubevault.com/docs/0.1.0/setup/csi-driver/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/csi-driver/overview/</guid><description>New to KubeVault? Please start here.
Prerequisite Kubernetes v1.12.x --allow-privileged flag must be set to true for both the API server and the kubelet (If you use Docker) The Docker daemon of the cluster nodes must allow shared mounts Pre-installed HasiCorp Vault server. Pass --feature-gates=CSIDriverRegistry=true,CSINodeInfo=true to kubelet and kube-apiserver Supported CSI Spec version CSI Spec Version csi-vault:0.1.0 0.3.0 ✓ Supported StorageClass provisioner CSI Driver (csi-vault) Version Provisioner Name Kubernetes Version 0.</description></item><item><title>Overview of Vault CSI Driver</title><link>https://kubevault.com/docs/0.2.0/setup/csi-driver/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/csi-driver/overview/</guid><description>New to KubeVault? Please start here.
Prerequisite Kubernetes v1.13+ --allow-privileged flag must be set to true for both the API server and the kubelet (If you use Docker) The Docker daemon of the cluster nodes must allow shared mounts Pre-installed HasiCorp Vault server. Pass --feature-gates=CSIDriverRegistry=true,CSINodeInfo=true to kubelet and kube-apiserver Supported CSI Spec version CSI Spec Version csi-vault:0.1.0 csi-vault:0.2.0 0.3.0 ✓ ✗ 1.</description></item><item><title>Overview of Vault CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/setup/csi-driver/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/csi-driver/overview/</guid><description>New to KubeVault? Please start here.
Prerequisite Kubernetes v1.14+ --allow-privileged flag must be set to true for both the API server and the kubelet (If you use Docker) The Docker daemon of the cluster nodes must allow shared mounts Pre-installed HasiCorp Vault server. Pass --feature-gates=CSIDriverRegistry=true,CSINodeInfo=true to kubelet and kube-apiserver Supported CSI Spec version CSI Spec Version csi-vault:0.1.0 csi-vault:0.2.0 0.3.0 ✓ ✗ 1.</description></item><item><title>Overview of Vault CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/csi-driver/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/csi-driver/overview/</guid><description>New to KubeVault? Please start here.
Prerequisite Kubernetes v1.14+ --allow-privileged flag must be set to true for both the API server and the kubelet (If you use Docker) The Docker daemon of the cluster nodes must allow shared mounts Pre-installed HasiCorp Vault server. Pass --feature-gates=CSIDriverRegistry=true,CSINodeInfo=true to kubelet and kube-apiserver Supported CSI Spec version CSI Spec Version csi-vault:0.1.0 csi-vault:0.2.0 0.3.0 ✓ ✗ 1.</description></item><item><title>PostgreSQL | Vault Server Storage</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/storage/postgresql/</guid><description>New to KubeVault? Please start here.
PostgreSQL In PostgreSQL storage backend, data will be stored in PostgreSQL. Vault documentation for PostgreSQL storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-postgreSQL namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: postgreSQL: connectionUrlSecret: &amp;#34;my-postgres-conn&amp;#34; spec.backend.postgreSQL To use postgreSQL as backend storage in Vault specify spec.backend.postgreSQL in VaultServer CRD.
spec: backend: postgreSQL: connectionUrlSecret: &amp;lt;secret_name&amp;gt; table: &amp;lt;table_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; spec.</description></item><item><title>PostgreSQL | Vault Server Storage</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/storage/postgresql/</guid><description>New to KubeVault? Please start here.
PostgreSQL In PostgreSQL storage backend, data will be stored in PostgreSQL. Vault documentation for PostgreSQL storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-postgreSQL namespace: demo spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: postgreSQL: connectionUrlSecret: &amp;#34;my-postgres-conn&amp;#34; spec.backend.postgreSQL To use postgreSQL as backend storage in Vault specify spec.backend.postgreSQL in VaultServer CRD.
spec: backend: postgreSQL: connectionUrlSecret: &amp;lt;secret_name&amp;gt; table: &amp;lt;table_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; spec.</description></item><item><title>PostgreSQL | Vault Server Storage</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/storage/postgresql/</guid><description>New to KubeVault? Please start here.
PostgreSQL In PostgreSQL storage backend, Vault data will be stored in PostgreSQL. Vault documentation for PostgreSQL storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-postgreSQL namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: postgresql: connectionURLSecret: &amp;#34;my-postgres-conn&amp;#34; spec.backend.postgresql To use PostgreSQL as backend storage in Vault specify spec.backend.postgresql in VaultServer CRD.
spec: backend: postgresql: connectionURLSecret: &amp;lt;secret_name&amp;gt; table: &amp;lt;table_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>PostgreSQL | Vault Server Storage</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/postgresql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/storage/postgresql/</guid><description>New to KubeVault? Please start here.
PostgreSQL In PostgreSQL storage backend, Vault data will be stored in PostgreSQL. Vault documentation for PostgreSQL storage can be found in here.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: vault-with-postgreSQL namespace: demo spec: replicas: 1 version: &amp;#34;1.2.0&amp;#34; backend: postgresql: connectionURLSecret: &amp;#34;my-postgres-conn&amp;#34; spec.backend.postgresql To use PostgreSQL as backend storage in Vault specify spec.backend.postgresql in VaultServer CRD.
spec: backend: postgresql: connectionURLSecret: &amp;lt;secret_name&amp;gt; table: &amp;lt;table_name&amp;gt; maxParallel: &amp;lt;max_parallel&amp;gt; Here, we are going to describe the various attributes of the spec.</description></item><item><title>PostgresRole | Vault Secret Engine</title><link>https://kubevault.com/docs/0.1.0/concepts/database-crds/postgresrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/database-crds/postgresrole/</guid><description>New to KubeVault? Please start here.
PostgresRole CRD Vault operator will create database connection config and role according to PostgresRole CRD (CustomResourceDefinition) specification. If the user deletes the PostgresRole CRD, then respective role will also be deleted from Vault.
apiVersion: authorization.kubedb.com/v1alpha1 kind: PostgresRole metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of the role in Vault will follow this format: k8s.</description></item><item><title>PostgresRole | Vault Secret Engine</title><link>https://kubevault.com/docs/0.2.0/concepts/database-crds/postgresrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/database-crds/postgresrole/</guid><description>New to KubeVault? Please start here.
PostgresRole CRD Vault operator will create database connection config and role according to PostgresRole CRD (CustomResourceDefinition) specification. If the user deletes the PostgresRole CRD, then respective role will also be deleted from Vault.
apiVersion: authorization.kubedb.com/v1alpha1 kind: PostgresRole metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of the role in Vault will follow this format: k8s.</description></item><item><title>PostgresRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/postgresrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/database-secret-engine/postgresrole/</guid><description>New to KubeVault? Please start here.
PostgresRole What is PostgresRole A PostgresRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a database secret engine role in a Kubernetes native way.
When a PostgresRole is created, the KubeVault operator creates a role according to specification. If the user deletes the PostgresRole CRD, then the respective role will also be deleted from Vault.
PostgresRole CRD Specification Like any official Kubernetes resource, a PostgresRole object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>PostgresRole | Vault Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/database-secret-engine/postgresrole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/database-secret-engine/postgresrole/</guid><description>New to KubeVault? Please start here.
PostgresRole What is PostgresRole A PostgresRole is a Kubernetes CustomResourceDefinition (CRD) which allows a user to create a database secret engine role in a Kubernetes native way.
When a PostgresRole is created, the KubeVault operator creates a role according to specification. If the user deletes the PostgresRole CRD, then the respective role will also be deleted from Vault.
PostgresRole CRD Specification Like any official Kubernetes resource, a PostgresRole object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>Release | Vault operator</title><link>https://kubevault.com/docs/0.1.0/setup/developer-guide/release/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/developer-guide/release/</guid><description>Release Process The following steps must be done from a Linux x64 bit machine.
Do a global replacement of tags so that docs point to the next release. Push changes to the release-x branch and apply new tag. Push all the changes to remote repo. Build and push vault docker image: $ cd ~/go/src/github.com/appscode/vault ./hack/docker/setup.sh; env APPSCODE_ENV=prod ./hack/docker/setup.sh release Now, update the release notes in Github. See previous release notes to get an idea what to include there.</description></item><item><title>Release | Vault operator</title><link>https://kubevault.com/docs/0.2.0/setup/developer-guide/release/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/developer-guide/release/</guid><description>Release Process The following steps must be done from a Linux x64 bit machine.
Do a global replacement of tags so that docs point to the next release. Push changes to the release-x branch and apply new tag. Push all the changes to remote repo. Build and push vault docker image: $ cd ~/go/src/github.com/appscode/vault ./hack/docker/setup.sh; env APPSCODE_ENV=prod ./hack/docker/setup.sh release Now, update the release notes in Github. See previous release notes to get an idea what to include there.</description></item><item><title>Release | Vault operator</title><link>https://kubevault.com/docs/v0.3.0/setup/developer-guide/release/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/developer-guide/release/</guid><description>Release Process The following steps must be done from a Linux x64 bit machine.
Do a global replacement of tags so that docs point to the next release. Push changes to the release-x branch and apply new tag. Push all the changes to remote repo. Build and push vault docker image: $ cd ~/go/src/github.com/appscode/vault ./hack/docker/setup.sh; env APPSCODE_ENV=prod ./hack/docker/setup.sh release Now, update the release notes in Github. See previous release notes to get an idea what to include there.</description></item><item><title>Release | Vault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/developer-guide/release/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/developer-guide/release/</guid><description>Release Process The following steps must be done from a Linux x64 bit machine.
Do a global replacement of tags so that docs point to the next release. Push changes to the release-x branch and apply new tag. Push all the changes to remote repo. Build and push vault docker image: $ cd ~/go/src/github.com/appscode/vault ./hack/docker/setup.sh; env APPSCODE_ENV=prod ./hack/docker/setup.sh release Now, update the release notes in Github. See previous release notes to get an idea what to include there.</description></item><item><title>Secret Engine</title><link>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/secretengine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/secret-engine-crds/secretengine/</guid><description>New to KubeVault? Please start here.
SecretEngine What is a SecretEngine A SecretEngine is a Kubernetes CustomResourceDefinition (CRD) which is designed to automate the process of enabling and configuring secret engines in Vault in a Kubernetes native way.
Secrets engines are components that store, generate, or encrypt data. Secrets engines are provided some set of data, they take some action on that data, and they return a result. Secrets engines are enabled at a &amp;ldquo;path&amp;rdquo; in Vault.</description></item><item><title>Secret Engine</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/secretengine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/secret-engine-crds/secretengine/</guid><description>New to KubeVault? Please start here.
SecretEngine What is a SecretEngine A SecretEngine is a Kubernetes CustomResourceDefinition (CRD) which is designed to automate the process of enabling and configuring secret engines in Vault in a Kubernetes native way.
Secrets engines are components that store, generate, or encrypt data. Secrets engines are provided some set of data, they take some action on that data, and they return a result. Secrets engines are enabled at a &amp;ldquo;path&amp;rdquo; in Vault.</description></item><item><title>Support | KubeVault</title><link>https://kubevault.com/docs/0.1.0/welcome/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/welcome/support/</guid><description>Support We use Slack for public discussions. To chit chat with us or the rest of the community, join us in the AppsCode Slack team channel #vault. To sign up, use our Slack inviter.
If you have found a bug with Vault operator or want to request for new features, please file an issue.</description></item><item><title>Support | KubeVault</title><link>https://kubevault.com/docs/0.2.0/welcome/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/welcome/support/</guid><description>Support We use Slack for public discussions. To chit chat with us or the rest of the community, join us in the AppsCode Slack team channel #vault. To sign up, use our Slack inviter.
If you have found a bug with Vault operator or want to request for new features, please file an issue.</description></item><item><title>Support | KubeVault</title><link>https://kubevault.com/docs/v0.3.0/welcome/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/welcome/support/</guid><description>Support We use Slack for public discussions. To chit chat with us or the rest of the community, join us in the AppsCode Slack team channel #vault. To sign up, use our Slack inviter.
If you have found a bug with Vault operator or want to request for new features, please file an issue.</description></item><item><title>Support | KubeVault</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/welcome/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/welcome/support/</guid><description>Support We use Slack for public discussions. To chit chat with us or the rest of the community, join us in the AppsCode Slack team channel #vault. To sign up, use our Slack inviter.
If you have found a bug with Vault operator or want to request for new features, please file an issue.</description></item><item><title>Table of Contents | Guides</title><link>https://kubevault.com/docs/0.1.0/guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/</guid><description>Guides Guides show you how to perform tasks with Vault operator and Vault CSI driver.
Using Vault operator To deploy Vault in AWS EKS see here. To deploy Vault in Google GKE see here. To deploy Vault in Azure AKS see here. To manage Vault policy see here. To manage Vault AWS secret engine see here. To manage Vault MongoDB Database secret engine see here. To manage Vault MySQL Database secret engine see here.</description></item><item><title>Table of Contents | Guides</title><link>https://kubevault.com/docs/0.2.0/guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/</guid><description>Guides Guides show you how to perform tasks with Vault operator and Vault CSI driver.
Using Vault operator To deploy Vault in AWS EKS see here. To deploy Vault in Google GKE see here. To deploy Vault in Azure AKS see here. To manage Vault policy see here. To manage Vault AWS secret engine see here. To manage Vault MongoDB Database secret engine see here. To manage Vault MySQL Database secret engine see here.</description></item><item><title>Table of Contents | Guides</title><link>https://kubevault.com/docs/v0.3.0/guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/</guid><description>Guides Guides show you how to perform tasks with KubeVault operator and Vault CSI driver.
Using KubeVault operator To deploy Vault in AWS EKS see here. To deploy Vault in Google GKE see here. To deploy Vault in Azure AKS see here. To manage Vault policy see here. To manage Vault AWS secret engine see here. To manage Vault GCP secret engine see here. To manage Vault Azure secret engine see here.</description></item><item><title>Table of Contents | Guides</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/</guid><description>Guides Guides show you how to perform tasks with KubeVault operator and Vault CSI driver.
Using KubeVault operator To deploy Vault in AWS EKS see here. To deploy Vault in Google GKE see here. To deploy Vault in Azure AKS see here. To manage Vault policy see here. To manage Vault AWS secret engine see here. To manage Vault GCP secret engine see here. To manage Vault Azure secret engine see here.</description></item><item><title>Table of Contents | Setup</title><link>https://kubevault.com/docs/0.1.0/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/</guid><description>Setup Setup contains instructions for installing the Vault operator and Vault CSI driver in Kubernetes.
Vault operator Install Vault operator. Installation instructions for Vault operator. Uninstall Vault operator. Instructions for uninstallating Vault operator. Vault CSI driver Install Vault CSI driver. Installation instructions for Vault CSI driver. Uninstall Vault CSI driver. Instructions for uninstallating Vault CSI driver. Kubectl Plugin Install Kubectl Plugin. Installation instructions for KubeVault kubectl plugin.</description></item><item><title>Table of Contents | Setup</title><link>https://kubevault.com/docs/0.2.0/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/</guid><description>Setup Setup contains instructions for installing the Vault operator and Vault CSI driver in Kubernetes.
Vault operator Install Vault operator. Installation instructions for Vault operator. Uninstall Vault operator. Instructions for uninstallating Vault operator. Vault CSI driver Install Vault CSI driver. Installation instructions for Vault CSI driver. Uninstall Vault CSI driver. Instructions for uninstallating Vault CSI driver. Kubectl Plugin Install Kubectl Plugin. Installation instructions for KubeVault kubectl plugin.</description></item><item><title>Table of Contents | Setup</title><link>https://kubevault.com/docs/v0.3.0/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/</guid><description>Setup Setup contains instructions for installing the Vault operator and Vault CSI driver in Kubernetes.
Vault operator Install Vault operator. Installation instructions for Vault operator. Uninstall Vault operator. Instructions for uninstallating Vault operator. Vault CSI driver Install Vault CSI driver. Installation instructions for Vault CSI driver. Uninstall Vault CSI driver. Instructions for uninstallating Vault CSI driver. Kubectl Plugin Install Kubectl Plugin. Installation instructions for KubeVault kubectl plugin.</description></item><item><title>Table of Contents | Setup</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/</guid><description>Setup Setup contains instructions for installing the Vault operator and Vault CSI driver in Kubernetes.
Vault operator Install Vault operator. Installation instructions for Vault operator. Uninstall Vault operator. Instructions for uninstallating Vault operator. Vault CSI driver Install Vault CSI driver. Installation instructions for Vault CSI driver. Uninstall Vault CSI driver. Instructions for uninstallating Vault CSI driver. Kubectl Plugin Install Kubectl Plugin. Installation instructions for KubeVault kubectl plugin.</description></item><item><title>Uninstall Vault CSI Driver</title><link>https://kubevault.com/docs/0.1.0/setup/csi-driver/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/csi-driver/uninstall/</guid><description>Uninstall Vault CSI Driver If you installed csi driver using YAML then run:
$ curl -fsSL https://raw.githubusercontent.com/kubevault/csi-driver/0.1.0/hack/deploy/install.sh \ | bash -s -- --uninstall [--namespace=NAMESPACE] The above command will leave the csidriver crd objects as-is. If you wish to nuke all csidriver crd objects, also pass the --purge flag.
If you used HELM to install Vault CSI driver, then run following command
helm del --purge &amp;lt;name&amp;gt;</description></item><item><title>Uninstall Vault CSI Driver</title><link>https://kubevault.com/docs/0.2.0/setup/csi-driver/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/csi-driver/uninstall/</guid><description>Uninstall Vault CSI Driver If you installed csi driver using YAML then run:
$ curl -fsSL https://raw.githubusercontent.com/kubevault/csi-driver/0.2.0/hack/deploy/install.sh \ | bash -s -- --uninstall [--namespace=NAMESPACE] The above command will leave the csidriver crd objects as-is. If you wish to nuke all csidriver crd objects, also pass the --purge flag.
If you used HELM to install Vault CSI driver, then run following command
helm del --purge &amp;lt;name&amp;gt;</description></item><item><title>Uninstall Vault CSI Driver</title><link>https://kubevault.com/docs/v0.3.0/setup/csi-driver/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/csi-driver/uninstall/</guid><description>Uninstall Vault CSI Driver To uninstall Vault CSI driver, run the following command:
Helm 3 Helm 2 YAML Using Helm 3 In Helm 3, release names are scoped to a namespace. So, provide the namespace you used to install the CSI driver when installing.
$ helm uninstall csi-vault --namespace kube-system Using Helm 2 $ helm delete csi-vault Using YAML (with Helm 3) If you prefer to not use Helm, you can generate YAMLs from Vault CSI driver chart and uninstall using kubectl.</description></item><item><title>Uninstall Vault CSI Driver</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/csi-driver/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/csi-driver/uninstall/</guid><description>Uninstall Vault CSI Driver To uninstall Vault CSI driver, run the following command:
Helm 3 Helm 2 YAML Using Helm 3 In Helm 3, release names are scoped to a namespace. So, provide the namespace you used to install the CSI driver when installing.
$ helm uninstall csi-vault --namespace kube-system Using Helm 2 $ helm delete csi-vault Using YAML (with Helm 3) If you prefer to not use Helm, you can generate YAMLs from Vault CSI driver chart and uninstall using kubectl.</description></item><item><title>Uninstall Vault operator</title><link>https://kubevault.com/docs/0.1.0/setup/operator/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/setup/operator/uninstall/</guid><description>Uninstall Vault operator To uninstall Vault operator, run the following command:
$ curl -fsSL https://raw.githubusercontent.com/kubevault/operator/0.1.0/hack/deploy/vault.sh \ | bash -s -- --uninstall [--namespace=NAMESPACE] + kubectl delete deployment -l app=vault -n kube-system deployment &amp;quot;vault-operator&amp;quot; deleted + kubectl delete service -l app=vault -n kube-system service &amp;quot;vault-operator&amp;quot; deleted + kubectl delete secret -l app=vault -n kube-system No resources found + kubectl delete serviceaccount -l app=vault -n kube-system No resources found + kubectl delete clusterrolebindings -l app=vault -n kube-system No resources found + kubectl delete clusterrole -l app=vault -n kube-system No resources found + kubectl delete initializerconfiguration -l app=vault initializerconfiguration &amp;quot;vault-initializer&amp;quot; deleted The above command will leave the Vault operator crd objects as-is.</description></item><item><title>Uninstall Vault operator</title><link>https://kubevault.com/docs/0.2.0/setup/operator/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/setup/operator/uninstall/</guid><description>Uninstall Vault operator To uninstall Vault operator, run the following command:
$ curl -fsSL https://raw.githubusercontent.com/kubevault/operator/0.2.0/hack/deploy/vault.sh \ | bash -s -- --uninstall [--namespace=NAMESPACE] + kubectl delete deployment -l app=vault -n kube-system deployment &amp;quot;vault-operator&amp;quot; deleted + kubectl delete service -l app=vault -n kube-system service &amp;quot;vault-operator&amp;quot; deleted + kubectl delete secret -l app=vault -n kube-system No resources found + kubectl delete serviceaccount -l app=vault -n kube-system No resources found + kubectl delete clusterrolebindings -l app=vault -n kube-system No resources found + kubectl delete clusterrole -l app=vault -n kube-system No resources found + kubectl delete initializerconfiguration -l app=vault initializerconfiguration &amp;quot;vault-initializer&amp;quot; deleted The above command will leave the Vault operator crd objects as-is.</description></item><item><title>Uninstall Vault operator</title><link>https://kubevault.com/docs/v0.3.0/setup/operator/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/setup/operator/uninstall/</guid><description>Uninstall Vault operator To uninstall Vault operator, run the following command:
Helm 3 Helm 2 YAML Using Helm 3 In Helm 3, release names are scoped to a namespace. So, provide the namespace you used to install the operator when installing.
$ helm uninstall vault-operator --namespace kube-system Using Helm 2 $ helm delete vault-operator Using YAML (with Helm 3) If you prefer to not use Helm, you can generate YAMLs from Vault operator chart and uninstall using kubectl.</description></item><item><title>Uninstall Vault operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/setup/operator/uninstall/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/setup/operator/uninstall/</guid><description>Uninstall Vault operator To uninstall Vault operator, run the following command:
Helm 3 Helm 2 YAML Using Helm 3 In Helm 3, release names are scoped to a namespace. So, provide the namespace you used to install the operator when installing.
$ helm uninstall vault-operator --namespace kube-system Using Helm 2 $ helm delete vault-operator Using YAML (with Helm 3) If you prefer to not use Helm, you can generate YAMLs from Vault operator chart and uninstall using kubectl.</description></item><item><title>Unsealer Unsealer</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/unsealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/unsealer/unsealer/</guid><description>New to KubeVault? Please start here.
Unsealer Unsealer automates the process of initializing and unsealing Vault running in Kubernetes cluster. Also it provides facilities to store unseal keys and root token in a secure way.
spec.unsealer To use Unsealer specify spec.unsealer in VaultServer CRD .
spec: unsealer: secretShares: &amp;lt;num_of_secret_shares&amp;gt; secretThresold: &amp;lt;num_of_secret_threshold&amp;gt; retryPeriodSeconds: &amp;lt;retry_period&amp;gt; overwriteExisting: &amp;lt;true/false&amp;gt; mode: ... unsealer.secretShares unsealer.secretShares is an optional field that specifies the number of shares to split the master key into.</description></item><item><title>Unsealer Unsealer</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/unsealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/unsealer/unsealer/</guid><description>New to KubeVault? Please start here.
Unsealer Unsealer automates the process of initializing and unsealing Vault running in Kubernetes cluster. Also it provides facilities to store unseal keys and root token in a secure way.
spec.unsealer To use Unsealer specify spec.unsealer in VaultServer CRD .
spec: unsealer: secretShares: &amp;lt;num_of_secret_shares&amp;gt; secretThresold: &amp;lt;num_of_secret_threshold&amp;gt; retryPeriodSeconds: &amp;lt;retry_period&amp;gt; overwriteExisting: &amp;lt;true/false&amp;gt; mode: ... unsealer.secretShares unsealer.secretShares is an optional field that specifies the number of shares to split the master key into.</description></item><item><title>Unsealer Unsealer</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/unsealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/unsealer/unsealer/</guid><description>New to KubeVault? Please start here.
Unsealer Unsealer automates the process of initializing and unsealing Vault running in Kubernetes cluster. Also, it provides facilities to store unseal keys and root token in a secure way.
Configuring Unsealer To use Unsealer, configure spec.unsealer field in VaultServer CRD .
spec: unsealer: secretShares: &amp;lt;num_of_secret_shares&amp;gt; secretThresold: &amp;lt;num_of_secret_threshold&amp;gt; retryPeriodSeconds: &amp;lt;retry_period&amp;gt; overwriteExisting: &amp;lt;true/false&amp;gt; mode: ... Here, we are going to describe the various attributes of the spec.</description></item><item><title>Unsealer Unsealer</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/unsealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/unsealer/unsealer/</guid><description>New to KubeVault? Please start here.
Unsealer Unsealer automates the process of initializing and unsealing Vault running in Kubernetes cluster. Also, it provides facilities to store unseal keys and root token in a secure way.
Configuring Unsealer To use Unsealer, configure spec.unsealer field in VaultServer CRD .
spec: unsealer: secretShares: &amp;lt;num_of_secret_shares&amp;gt; secretThresold: &amp;lt;num_of_secret_threshold&amp;gt; retryPeriodSeconds: &amp;lt;retry_period&amp;gt; overwriteExisting: &amp;lt;true/false&amp;gt; mode: ... Here, we are going to describe the various attributes of the spec.</description></item><item><title>Use a Vault Server with Multiple Kubernetes Clusters</title><link>https://kubevault.com/docs/0.1.0/guides/platforms/multi-cluster-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/platforms/multi-cluster-vault/</guid><description>New to KubeVault? Please start here.
Use a Vault Server with Multiple Kubernetes Clusters In this tutorial, we are going to show how to use Vault operator in multiple Kubernetes clusters with a single Vault server.
To being with, we have created two GKE clusters.
We are going to install Vault operator in demo-cluster-1. We are going to set --cluster-name flag. This flag value will be used by Vault operator when creating resources in Vault.</description></item><item><title>Use a Vault Server with Multiple Kubernetes Clusters</title><link>https://kubevault.com/docs/0.2.0/guides/platforms/multi-cluster-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/platforms/multi-cluster-vault/</guid><description>New to KubeVault? Please start here.
Use a Vault Server with Multiple Kubernetes Clusters In this tutorial, we are going to show how to use Vault operator in multiple Kubernetes clusters with a single Vault server.
To being with, we have created two GKE clusters.
We are going to install Vault operator in demo-cluster-1. We are going to set --cluster-name flag. This flag value will be used by Vault operator when creating resources in Vault.</description></item><item><title>Use a Vault Server with Multiple Kubernetes Clusters</title><link>https://kubevault.com/docs/v0.3.0/guides/platforms/multi-cluster-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/platforms/multi-cluster-vault/</guid><description>New to KubeVault? Please start here.
Use a Vault Server with Multiple Kubernetes Clusters In this tutorial, we are going to show how to use KubeVault operators in multiple Kubernetes clusters against a shared Vault server.
To being with, we have created two GKE clusters.
We are going to install KubeVault operator in demo-cluster-1 using Helm 3. We are going to set --cluster-name flag. This flag value will be used by KubeVault operator when creating resources in Vault.</description></item><item><title>Use a Vault Server with Multiple Kubernetes Clusters</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/multi-cluster-vault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/platforms/multi-cluster-vault/</guid><description>New to KubeVault? Please start here.
Use a Vault Server with Multiple Kubernetes Clusters In this tutorial, we are going to show how to use KubeVault operators in multiple Kubernetes clusters against a shared Vault server.
To being with, we have created two GKE clusters.
We are going to install KubeVault operator in demo-cluster-1 using Helm 3. We are going to set --cluster-name flag. This flag value will be used by KubeVault operator when creating resources in Vault.</description></item><item><title>Vault</title><link>https://kubevault.com/docs/0.1.0/reference/cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/cli/</guid><description>vault KubeVault cli by AppsCode
Synopsis KubeVault cli by AppsCode
Options --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Analytics (default true) --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default HTTP cache directory (default &amp;quot;/home/tamal/.kube/http-cache&amp;quot;) --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --enable-status-subresource If true, uses sub resource for crds.</description></item><item><title>Vault</title><link>https://kubevault.com/docs/0.2.0/reference/cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/cli/</guid><description>vault KubeVault cli by AppsCode
Synopsis KubeVault cli by AppsCode
Options --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Analytics (default true) --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default HTTP cache directory (default &amp;quot;/home/tamal/.kube/http-cache&amp;quot;) --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use --enable-status-subresource If true, uses sub resource for crds.</description></item><item><title>Vault</title><link>https://kubevault.com/docs/v0.3.0/reference/cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/cli/</guid><description>vault KubeVault cli by AppsCode
Synopsis KubeVault cli by AppsCode
Options --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Analytics (default true) --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default HTTP cache directory (default &amp;quot;/home/tamal/.kube/http-cache&amp;quot;) --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use -h, --help help for vault --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity.</description></item><item><title>Vault</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/cli/</guid><description>vault KubeVault cli by AppsCode
Synopsis KubeVault cli by AppsCode
Options --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Analytics (default true) --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups. --cache-dir string Default HTTP cache directory (default &amp;quot;/home/runner/.kube/http-cache&amp;quot;) --certificate-authority string Path to a cert file for the certificate authority --client-certificate string Path to a client certificate file for TLS --client-key string Path to a client key file for TLS --cluster string The name of the kubeconfig cluster to use --context string The name of the kubeconfig context to use -h, --help help for vault --insecure-skip-tls-verify If true, the server's certificate will not be checked for validity.</description></item><item><title>Vault Approve</title><link>https://kubevault.com/docs/0.1.0/reference/cli/vault_approve/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/cli/vault_approve/</guid><description>vault approve Approve request
Synopsis Approve request
vault approve [flags] Options -f, --filename strings Filename, directory, or URL to files identifying the resource to update -h, --help help for approve -k, --kustomize string Process the kustomization directory. This flag can't be used together with -f or -R. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.</description></item><item><title>Vault Approve</title><link>https://kubevault.com/docs/0.2.0/reference/cli/vault_approve/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/cli/vault_approve/</guid><description>vault approve Approve request
Synopsis Approve request
vault approve [flags] Options -f, --filename strings Filename, directory, or URL to files identifying the resource to update -h, --help help for approve -k, --kustomize string Process the kustomization directory. This flag can't be used together with -f or -R. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.</description></item><item><title>Vault Approve</title><link>https://kubevault.com/docs/v0.3.0/reference/cli/vault_approve/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/cli/vault_approve/</guid><description>vault approve Approve request
Synopsis Approve request
vault approve [flags] Options -f, --filename strings Filename, directory, or URL to files identifying the resource to update -h, --help help for approve -k, --kustomize string Process the kustomization directory. This flag can't be used together with -f or -R. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.</description></item><item><title>Vault Approve</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/cli/vault_approve/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/cli/vault_approve/</guid><description>vault approve Approve request
Synopsis Approve request
vault approve [flags] Options -f, --filename strings Filename, directory, or URL to files identifying the resource to update -h, --help help for approve -k, --kustomize string Process the kustomization directory. This flag can't be used together with -f or -R. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.</description></item><item><title>Vault Deny</title><link>https://kubevault.com/docs/0.1.0/reference/cli/vault_deny/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/cli/vault_deny/</guid><description>vault deny Deny request
Synopsis Deny request
vault deny [flags] Options -f, --filename strings Filename, directory, or URL to files identifying the resource to update -h, --help help for deny -k, --kustomize string Process the kustomization directory. This flag can't be used together with -f or -R. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.</description></item><item><title>Vault Deny</title><link>https://kubevault.com/docs/0.2.0/reference/cli/vault_deny/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/cli/vault_deny/</guid><description>vault deny Deny request
Synopsis Deny request
vault deny [flags] Options -f, --filename strings Filename, directory, or URL to files identifying the resource to update -h, --help help for deny -k, --kustomize string Process the kustomization directory. This flag can't be used together with -f or -R. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.</description></item><item><title>Vault Deny</title><link>https://kubevault.com/docs/v0.3.0/reference/cli/vault_deny/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/cli/vault_deny/</guid><description>vault deny Deny request
Synopsis Deny request
vault deny [flags] Options -f, --filename strings Filename, directory, or URL to files identifying the resource to update -h, --help help for deny -k, --kustomize string Process the kustomization directory. This flag can't be used together with -f or -R. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.</description></item><item><title>Vault Deny</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/cli/vault_deny/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/cli/vault_deny/</guid><description>vault deny Deny request
Synopsis Deny request
vault deny [flags] Options -f, --filename strings Filename, directory, or URL to files identifying the resource to update -h, --help help for deny -k, --kustomize string Process the kustomization directory. This flag can't be used together with -f or -R. -R, --recursive Process the directory used in -f, --filename recursively. Useful when you want to manage related manifests organized within the same directory.</description></item><item><title>Vault Policy Management</title><link>https://kubevault.com/docs/0.1.0/guides/policy-management/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/guides/policy-management/overview/</guid><description>New to KubeVault? Please start here.
Vault Policy Management You can easily manage Vault Policy in Kubernetes way using Vault operator.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Vault Policy Management</title><link>https://kubevault.com/docs/0.2.0/guides/policy-management/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/guides/policy-management/overview/</guid><description>New to KubeVault? Please start here.
Vault Policy Management You can easily manage Vault Policy in Kubernetes way using Vault operator.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding Before you begin:
Install Vault operator in your cluster following the steps here.
Deploy Vault. It could be in the Kubernetes cluster or external.
To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Vault Policy Management</title><link>https://kubevault.com/docs/v0.3.0/guides/policy-management/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/policy-management/overview/</guid><description>New to KubeVault? Please start here.
Vault Policy Management You can easily manage the Vault policies in Kubernetes native way using the KubeVault operator. The operator also provides functionality to create auth method roles that bind policies.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.
$ kubectl create ns demo namespace/demo created Before you begin Install KubeVault operator in your cluster following the steps here.</description></item><item><title>Vault Policy Management</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/policy-management/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/policy-management/overview/</guid><description>New to KubeVault? Please start here.
Vault Policy Management You can easily manage the Vault policies in Kubernetes native way using the KubeVault operator. The operator also provides functionality to create auth method roles that bind policies.
You should be familiar with the following CRD:
VaultPolicy VaultPolicyBinding AppBinding To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.
$ kubectl create ns demo namespace/demo created Before you begin Install KubeVault operator in your cluster following the steps here.</description></item><item><title>Vault Server</title><link>https://kubevault.com/docs/v0.3.0/guides/vault-server/vault-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/vault-server/vault-server/</guid><description>New to KubeVault? Please start here.
Vault Server You can easily deploy and manage HashiCorp Vault in the Kubernetes cluster using KubeVault operator. In this tutorial, we are going to deploy Vault on the Kubernetes cluster using KubeVault operator.
Before you begin Install KubeVault operator in your cluster following the steps here. To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Vault Server</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/vault-server/vault-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/vault-server/vault-server/</guid><description>New to KubeVault? Please start here.
Vault Server You can easily deploy and manage HashiCorp Vault in the Kubernetes cluster using KubeVault operator. In this tutorial, we are going to deploy Vault on the Kubernetes cluster using KubeVault operator.
Before you begin Install KubeVault operator in your cluster following the steps here. To keep things isolated, we are going to use a separate namespace called demo throughout this tutorial.</description></item><item><title>Vault Server Authentication Methods</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/auth-methods/overview/</guid><description> New to KubeVault? Please start here.
Vault Server Authentication Methods In Vault operator, usually Vault connection information are handled by AppBinding. Following authentication methods are currently supported by Vault operator using AppBinding:
AWS IAM Auth Method Kubernetes Auth Method TLS Certificates Auth Method Token Auth Method Userpass Auth Method</description></item><item><title>Vault Server Authentication Methods</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/auth-methods/overview/</guid><description> New to KubeVault? Please start here.
Vault Server Authentication Methods In Vault operator, usually Vault connection information are handled by AppBinding. Following authentication methods are currently supported by Vault operator using AppBinding:
AWS IAM Auth Method Kubernetes Auth Method TLS Certificates Auth Method Token Auth Method Userpass Auth Method</description></item><item><title>Vault Server Overview</title><link>https://kubevault.com/docs/v0.3.0/guides/vault-server/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/guides/vault-server/overview/</guid><description>New to KubeVault? Please start here.
Overview The KubeVault operator makes it easy to deploy, maintain and manage Vault servers in Kubernetes clusters. It covers automatic initialization and unsealing and also stores unseal keys and root token in a secure way. The KubeVault operator can manage policies and secret engines of Vault servers which are not provisioned by the KubeVault operator. It has the following features:
Vault Policy Management: Provides a Kubernetes native way to manage Vault policies and bind those policies to the users or the auth method roles.</description></item><item><title>Vault Server Overview</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/guides/vault-server/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/guides/vault-server/overview/</guid><description>New to KubeVault? Please start here.
Overview The KubeVault operator makes it easy to deploy, maintain and manage Vault servers in Kubernetes clusters. It covers automatic initialization and unsealing and also stores unseal keys and root token in a secure way. The KubeVault operator can manage policies and secret engines of Vault servers which are not provisioned by the KubeVault operator. It has the following features:
Vault Policy Management: Provides a Kubernetes native way to manage Vault policies and bind those policies to the users or the auth method roles.</description></item><item><title>Vault Server Version | KubeVault Concepts</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/vaultserverversion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/vaultserverversion/</guid><description>New to KubeVault? Please start here.
VaultServerVersion VaultServerVersion is a Kubernetes Custom Resource Definitions (CRD). It is a non-namespaced CRD. The name of this CRD will be used in .spec.version field of VaultServer CRD. It provides a way to specify the docker images of Vault, Unsealer and Exporter.
Using a separate CRD for specifying respective docker images allow us to modify the images independently of Vault operator. This will also allow users to use their custom images.</description></item><item><title>Vault Server Version | KubeVault Concepts</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/vaultserverversion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/vaultserverversion/</guid><description>New to KubeVault? Please start here.
VaultServerVersion VaultServerVersion is a Kubernetes Custom Resource Definitions (CRD). It is a non-namespaced CRD. The name of this CRD will be used in .spec.version field of VaultServer CRD. It provides a way to specify the docker images of Vault, Unsealer and Exporter.
Using a separate CRD for specifying respective docker images allow us to modify the images independently of Vault operator. This will also allow users to use their custom images.</description></item><item><title>Vault Server Version | KubeVault Concepts</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/vaultserverversion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/vaultserverversion/</guid><description>New to KubeVault? Please start here.
VaultServerVersion What is VaultServerVersion VaultServerVersion is a Kubernetes Custom Resource Definitions (CRD). It is a non-namespaced CRD. The name of this CRD will be used in .spec.version field of VaultServer CRD. It provides a way to specify the docker images for Vault, Unsealer, and Exporter.
Using a separate CRD for specifying respective docker images allows us to modify the images independently of the KubeVault operator.</description></item><item><title>Vault Server Version | KubeVault Concepts</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/vaultserverversion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/vaultserverversion/</guid><description>New to KubeVault? Please start here.
VaultServerVersion What is VaultServerVersion VaultServerVersion is a Kubernetes Custom Resource Definitions (CRD). It is a non-namespaced CRD. The name of this CRD will be used in .spec.version field of VaultServer CRD. It provides a way to specify the docker images for Vault, Unsealer, and Exporter.
Using a separate CRD for specifying respective docker images allows us to modify the images independently of the KubeVault operator.</description></item><item><title>Vault Server | KubeVault Concepts</title><link>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/vaultserver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/vault-server-crds/vaultserver/</guid><description>New to KubeVault? Please start here.
VaultServer CRD Vault operator will deploy Vault according to VaultServer CRD (CustomResourceDefinition) specification.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: &amp;lt;name&amp;gt; spec: ... status: ... VaultServer Spec VaultServer Spec contains the configuration about how to deploy Vault in Kubernetes cluster. It also covers automate unsealing of Vault.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: example namespace: default spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: inmem: {} unsealer: secretShares: 4 secretThreshold: 2 mode: kubernetesSecret: secretName: vault-keys The spec section has following parts:</description></item><item><title>Vault Server | KubeVault Concepts</title><link>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/vaultserver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/vault-server-crds/vaultserver/</guid><description>New to KubeVault? Please start here.
VaultServer CRD Vault operator will deploy Vault according to VaultServer CRD (CustomResourceDefinition) specification.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: &amp;lt;name&amp;gt; spec: ... status: ... VaultServer Spec VaultServer Spec contains the configuration about how to deploy Vault in Kubernetes cluster. It also covers automate unsealing of Vault.
apiVersion: kubevault.com/v1alpha1 kind: VaultServer metadata: name: example namespace: default spec: nodes: 1 version: &amp;#34;0.11.1&amp;#34; backend: inmem: {} unsealer: secretShares: 4 secretThreshold: 2 mode: kubernetesSecret: secretName: vault-keys The spec section has following parts:</description></item><item><title>Vault Server | KubeVault Concepts</title><link>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/vaultserver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/vault-server-crds/vaultserver/</guid><description>New to KubeVault? Please start here.
VaultServer What is VaultServer A VaultServer is a Kubernetes CustomResourceDefinition (CRD) which is used to deploy a HashiCorp Vault server on Kubernetes clusters in a Kubernetes native way.
When a VaultServer is created, the KubeVault operator will deploy a Vault server and create necessary Kubernetes resources required for the Vault server.
VaultServer CRD Specification Like any official Kubernetes resource, a VaultServer object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>Vault Server | KubeVault Concepts</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/vaultserver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/vault-server-crds/vaultserver/</guid><description>New to KubeVault? Please start here.
VaultServer What is VaultServer A VaultServer is a Kubernetes CustomResourceDefinition (CRD) which is used to deploy a HashiCorp Vault server on Kubernetes clusters in a Kubernetes native way.
When a VaultServer is created, the KubeVault operator will deploy a Vault server and create necessary Kubernetes resources required for the Vault server.
VaultServer CRD Specification Like any official Kubernetes resource, a VaultServer object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>Vault Version</title><link>https://kubevault.com/docs/0.1.0/reference/cli/vault_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/cli/vault_version/</guid><description>vault version Prints binary version number.
Synopsis Prints binary version number.
vault version [flags] Options -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Analytics (default true) --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups.</description></item><item><title>Vault Version</title><link>https://kubevault.com/docs/0.2.0/reference/cli/vault_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/cli/vault_version/</guid><description>vault version Prints binary version number.
Synopsis Prints binary version number.
vault version [flags] Options -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Analytics (default true) --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups.</description></item><item><title>Vault Version</title><link>https://kubevault.com/docs/v0.3.0/reference/cli/vault_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/cli/vault_version/</guid><description>vault version Prints binary version number.
Synopsis Prints binary version number.
vault version [flags] Options --check string Check version constraint -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Analytics (default true) --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups.</description></item><item><title>Vault Version</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/cli/vault_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/cli/vault_version/</guid><description>vault version Prints binary version number.
Synopsis Prints binary version number.
vault version [flags] Options --check string Check version constraint -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --analytics Send analytical events to Google Analytics (default true) --as string Username to impersonate for the operation --as-group stringArray Group to impersonate for the operation, this flag can be repeated to specify multiple groups.</description></item><item><title>Vault-Operator</title><link>https://kubevault.com/docs/0.1.0/reference/operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/operator/</guid><description>vault-operator Vault Operator by AppsCode - HashiCorp Vault Operator for Kubernetes
Synopsis Vault Operator by AppsCode - HashiCorp Vault Operator for Kubernetes
Options --alsologtostderr log to standard error as well as files --bypass-validating-webhook-xray if true, bypasses validating webhook xray checks --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for vault-operator --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --test.</description></item><item><title>Vault-Operator</title><link>https://kubevault.com/docs/0.2.0/reference/operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/operator/</guid><description>vault-operator Vault Operator by AppsCode - HashiCorp Vault Operator for Kubernetes
Synopsis Vault Operator by AppsCode - HashiCorp Vault Operator for Kubernetes
Options --alsologtostderr log to standard error as well as files --bypass-validating-webhook-xray if true, bypasses validating webhook xray checks --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for vault-operator --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --test.</description></item><item><title>Vault-Operator</title><link>https://kubevault.com/docs/v0.3.0/reference/operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/operator/</guid><description>vault-operator Vault Operator by AppsCode - HashiCorp Vault Operator for Kubernetes
Synopsis Vault Operator by AppsCode - HashiCorp Vault Operator for Kubernetes
Options --alsologtostderr log to standard error as well as files --bypass-validating-webhook-xray if true, bypasses validating webhook xray checks --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for vault-operator --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Operator</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/operator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/operator/</guid><description>vault-operator Vault Operator by AppsCode - HashiCorp Vault Operator for Kubernetes
Synopsis Vault Operator by AppsCode - HashiCorp Vault Operator for Kubernetes
Options --alsologtostderr log to standard error as well as files --bypass-validating-webhook-xray if true, bypasses validating webhook xray checks --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for vault-operator --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Operator Run</title><link>https://kubevault.com/docs/0.1.0/reference/operator/vault-operator_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/operator/vault-operator_run/</guid><description>vault-operator run Launch Vault operator
Synopsis Launch Vault operator
vault-operator run [flags] Options --audit-dynamic-configuration Enables dynamic audit configuration. This feature also requires the DynamicAuditing feature flag --audit-log-batch-buffer-size int The size of the buffer to store events before batching and writing. Only used in batch mode. (default 10000) --audit-log-batch-max-size int The maximum size of a batch. Only used in batch mode. (default 1) --audit-log-batch-max-wait duration The amount of time to wait before force writing the batch that hadn't reached the max size.</description></item><item><title>Vault-Operator Run</title><link>https://kubevault.com/docs/0.2.0/reference/operator/vault-operator_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/operator/vault-operator_run/</guid><description>vault-operator run Launch Vault operator
Synopsis Launch Vault operator
vault-operator run [flags] Options --audit-dynamic-configuration Enables dynamic audit configuration. This feature also requires the DynamicAuditing feature flag --audit-log-batch-buffer-size int The size of the buffer to store events before batching and writing. Only used in batch mode. (default 10000) --audit-log-batch-max-size int The maximum size of a batch. Only used in batch mode. (default 1) --audit-log-batch-max-wait duration The amount of time to wait before force writing the batch that hadn't reached the max size.</description></item><item><title>Vault-Operator Run</title><link>https://kubevault.com/docs/v0.3.0/reference/operator/vault-operator_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/operator/vault-operator_run/</guid><description>vault-operator run Launch Vault operator
Synopsis Launch Vault operator
vault-operator run [flags] Options --audit-dynamic-configuration Enables dynamic audit configuration. This feature also requires the DynamicAuditing feature flag --audit-log-batch-buffer-size int The size of the buffer to store events before batching and writing. Only used in batch mode. (default 10000) --audit-log-batch-max-size int The maximum size of a batch. Only used in batch mode. (default 1) --audit-log-batch-max-wait duration The amount of time to wait before force writing the batch that hadn't reached the max size.</description></item><item><title>Vault-Operator Run</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/operator/vault-operator_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/operator/vault-operator_run/</guid><description>vault-operator run Launch Vault operator
Synopsis Launch Vault operator
vault-operator run [flags] Options --audit-dynamic-configuration Enables dynamic audit configuration. This feature also requires the DynamicAuditing feature flag --audit-log-batch-buffer-size int The size of the buffer to store events before batching and writing. Only used in batch mode. (default 10000) --audit-log-batch-max-size int The maximum size of a batch. Only used in batch mode. (default 1) --audit-log-batch-max-wait duration The amount of time to wait before force writing the batch that hadn't reached the max size.</description></item><item><title>Vault-Operator Version</title><link>https://kubevault.com/docs/0.1.0/reference/operator/vault-operator_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/operator/vault-operator_version/</guid><description>vault-operator version Prints binary version number.
Synopsis Prints binary version number.
vault-operator version [flags] Options -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --bypass-validating-webhook-xray if true, bypasses validating webhook xray checks --enable-analytics Send analytical events to Google Analytics (default true) --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --test.</description></item><item><title>Vault-Operator Version</title><link>https://kubevault.com/docs/0.2.0/reference/operator/vault-operator_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/operator/vault-operator_version/</guid><description>vault-operator version Prints binary version number.
Synopsis Prints binary version number.
vault-operator version [flags] Options -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --bypass-validating-webhook-xray if true, bypasses validating webhook xray checks --enable-analytics Send analytical events to Google Analytics (default true) --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --test.</description></item><item><title>Vault-Operator Version</title><link>https://kubevault.com/docs/v0.3.0/reference/operator/vault-operator_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/operator/vault-operator_version/</guid><description>vault-operator version Prints binary version number.
Synopsis Prints binary version number.
vault-operator version [flags] Options --check string Check version constraint -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --bypass-validating-webhook-xray if true, bypasses validating webhook xray checks --enable-analytics Send analytical events to Google Analytics (default true) --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Operator Version</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/operator/vault-operator_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/operator/vault-operator_version/</guid><description>vault-operator version Prints binary version number.
Synopsis Prints binary version number.
vault-operator version [flags] Options --check string Check version constraint -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --bypass-validating-webhook-xray if true, bypasses validating webhook xray checks --enable-analytics Send analytical events to Google Analytics (default true) --log-flush-frequency duration Maximum number of seconds between log flushes (default 5s) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files (default true) --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Unsealer</title><link>https://kubevault.com/docs/0.1.0/reference/unsealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/unsealer/</guid><description>vault-unsealer Automates initialisation and unsealing of Hashicorp Vault
Synopsis Automates initialisation and unsealing of Hashicorp Vault
Options --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for vault-unsealer --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Unsealer</title><link>https://kubevault.com/docs/0.2.0/reference/unsealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/unsealer/</guid><description>vault-unsealer Automates initialisation and unsealing of Hashicorp Vault
Synopsis Automates initialisation and unsealing of Hashicorp Vault
Options --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for vault-unsealer --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Unsealer</title><link>https://kubevault.com/docs/v0.3.0/reference/unsealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/unsealer/</guid><description>vault-unsealer Automates initialisation and unsealing of Hashicorp Vault
Synopsis Automates initialisation and unsealing of Hashicorp Vault
Options --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for vault-unsealer --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Unsealer</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/unsealer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/unsealer/</guid><description>vault-unsealer Automates initialisation and unsealing of Hashicorp Vault
Synopsis Automates initialisation and unsealing of Hashicorp Vault
Options --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) -h, --help help for vault-unsealer --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Unsealer Run</title><link>https://kubevault.com/docs/0.1.0/reference/unsealer/vault-unsealer_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/unsealer/vault-unsealer_run/</guid><description>vault-unsealer run Launch Vault unsealer
Synopsis Launch Vault unsealer
vault-unsealer run [flags] Options --auth.k8s-ca-cert string PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API --auth.k8s-host string Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server --auth.k8s-token-reviewer-jwt string A service account JWT used to access the TokenReview API to validate other JWTs during login.</description></item><item><title>Vault-Unsealer Run</title><link>https://kubevault.com/docs/0.2.0/reference/unsealer/vault-unsealer_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/unsealer/vault-unsealer_run/</guid><description>vault-unsealer run Launch Vault unsealer
Synopsis Launch Vault unsealer
vault-unsealer run [flags] Options --auth.k8s-ca-cert string PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API --auth.k8s-host string Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server --auth.k8s-token-reviewer-jwt string A service account JWT used to access the TokenReview API to validate other JWTs during login.</description></item><item><title>Vault-Unsealer Run</title><link>https://kubevault.com/docs/v0.3.0/reference/unsealer/vault-unsealer_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/unsealer/vault-unsealer_run/</guid><description>vault-unsealer run Launch Vault unsealer
Synopsis Launch Vault unsealer
vault-unsealer run [flags] Options --auth.k8s-ca-cert string PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API --auth.k8s-host string Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server --auth.k8s-token-reviewer-jwt string A service account JWT used to access the TokenReview API to validate other JWTs during login.</description></item><item><title>Vault-Unsealer Run</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/unsealer/vault-unsealer_run/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/unsealer/vault-unsealer_run/</guid><description>vault-unsealer run Launch Vault unsealer
Synopsis Launch Vault unsealer
vault-unsealer run [flags] Options --auth.k8s-ca-cert string PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API --auth.k8s-host string Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server --auth.k8s-token-reviewer-jwt string A service account JWT used to access the TokenReview API to validate other JWTs during login.</description></item><item><title>Vault-Unsealer Version</title><link>https://kubevault.com/docs/0.1.0/reference/unsealer/vault-unsealer_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/reference/unsealer/vault-unsealer_version/</guid><description>vault-unsealer version Prints binary version number.
Synopsis Prints binary version number.
vault-unsealer version [flags] Options -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Unsealer Version</title><link>https://kubevault.com/docs/0.2.0/reference/unsealer/vault-unsealer_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/reference/unsealer/vault-unsealer_version/</guid><description>vault-unsealer version Prints binary version number.
Synopsis Prints binary version number.
vault-unsealer version [flags] Options -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Unsealer Version</title><link>https://kubevault.com/docs/v0.3.0/reference/unsealer/vault-unsealer_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/reference/unsealer/vault-unsealer_version/</guid><description>vault-unsealer version Prints binary version number.
Synopsis Prints binary version number.
vault-unsealer version [flags] Options --check string Check version constraint -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>Vault-Unsealer Version</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/reference/unsealer/vault-unsealer_version/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/reference/unsealer/vault-unsealer_version/</guid><description>vault-unsealer version Prints binary version number.
Synopsis Prints binary version number.
vault-unsealer version [flags] Options --check string Check version constraint -h, --help help for version --short Print just the version number. Options inherited from parent commands --alsologtostderr log to standard error as well as files --enable-analytics Send analytical events to Google Analytics (default true) --log_backtrace_at traceLocation when logging hits line file:N, emit a stack trace (default :0) --log_dir string If non-empty, write log files in this directory --logtostderr log to standard error instead of files --stderrthreshold severity logs at or above this threshold go to stderr --use-kubeapiserver-fqdn-for-aks if true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.</description></item><item><title>VaultPolicy | KubeVault Concepts</title><link>https://kubevault.com/docs/0.1.0/concepts/policy-crds/vaultpolicy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/policy-crds/vaultpolicy/</guid><description>New to KubeVault? Please start here.
VaultPolicy CRD Vault operator will create Vault Policy according to VaultPolicy CRD (CustomResourceDefinition) specification. If the user deletes the VaultPolicy CRD, then respective policy will also be deleted from Vault.
apiVersion: policy.kubevault.com/v1alpha1 kind: VaultPolicy metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of policy in Vault will follow this format: k8s.{spec.clusterName}.{spec.namespace}.{spec.name}
VaultPolicy Spec VaultPolicy spec contains policy and vault information.</description></item><item><title>VaultPolicy | KubeVault Concepts</title><link>https://kubevault.com/docs/0.2.0/concepts/policy-crds/vaultpolicy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/policy-crds/vaultpolicy/</guid><description>New to KubeVault? Please start here.
VaultPolicy CRD Vault operator will create Vault Policy according to VaultPolicy CRD (CustomResourceDefinition) specification. If the user deletes the VaultPolicy CRD, then respective policy will also be deleted from Vault.
apiVersion: policy.kubevault.com/v1alpha1 kind: VaultPolicy metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... Note: To resolve the naming conflict, name of policy in Vault will follow this format: k8s.{spec.clusterName}.{spec.namespace}.{spec.name}
VaultPolicy Spec VaultPolicy spec contains policy and vault information.</description></item><item><title>VaultPolicy | KubeVault Concepts</title><link>https://kubevault.com/docs/v0.3.0/concepts/policy-crds/vaultpolicy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/policy-crds/vaultpolicy/</guid><description>New to KubeVault? Please start here.
VaultPolicy What is VaultPolicy A VaultPolicy is a Kubernetes CustomResourceDefinition (CRD) which represents Vault server policies in a Kubernetes native way.
When a VaultPolicy is created, the KubeVault operator will create a policy in the associated Vault server according to specification. If the VaultPolicy CRD is deleted, the respective policy will also be deleted from the Vault server.
VaultPolicy CRD Specification Like any official Kubernetes resource, a VaultPolicy object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>VaultPolicy | KubeVault Concepts</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/policy-crds/vaultpolicy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/policy-crds/vaultpolicy/</guid><description>New to KubeVault? Please start here.
VaultPolicy What is VaultPolicy A VaultPolicy is a Kubernetes CustomResourceDefinition (CRD) which represents Vault server policies in a Kubernetes native way.
When a VaultPolicy is created, the KubeVault operator will create a policy in the associated Vault server according to specification. If the VaultPolicy CRD is deleted, the respective policy will also be deleted from the Vault server.
VaultPolicy CRD Specification Like any official Kubernetes resource, a VaultPolicy object has TypeMeta, ObjectMeta, Spec and Status sections.</description></item><item><title>VaultPolicyBinding | KubeVault Concepts</title><link>https://kubevault.com/docs/0.1.0/concepts/policy-crds/vaultpolicybinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/policy-crds/vaultpolicybinding/</guid><description>New to KubeVault? Please start here.
VaultPolicyBinding CRD Vault operator will create Vault Kuberenetes Role according to VaultPolicyBinding CRD (CustomResourceDefinition) specification. If the user deletes the VaultPolicyBinding CRD, then respective role will also be deleted from Vault.
apiVersion: policy.kubevault.com/v1alpha1 kind: VaultPolicyBinding metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... VaultPolicyBinding Spec VaultPolicyBinding spec contains information that necessary for creating Vault Kubernetes Role.
apiVersion: policy.kubevault.com/v1alpha1 kind: VaultPolicyBinding metadata: name: secret-admin namespace: demo spec: policies: [&amp;#34;secret-admin&amp;#34;] serviceAccountNames: [&amp;#34;sa1&amp;#34;,&amp;#34;sa2&amp;#34;] serviceAccountNamespaces: [&amp;#34;default&amp;#34;,&amp;#34;demo&amp;#34;] TTL: &amp;#34;1000&amp;#34; maxTTL: &amp;#34;2000&amp;#34; Period: &amp;#34;1000&amp;#34; VaultPolicyBinding Spec has following fields:</description></item><item><title>VaultPolicyBinding | KubeVault Concepts</title><link>https://kubevault.com/docs/0.2.0/concepts/policy-crds/vaultpolicybinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/policy-crds/vaultpolicybinding/</guid><description>New to KubeVault? Please start here.
VaultPolicyBinding CRD Vault operator will create Vault Kuberenetes Role according to VaultPolicyBinding CRD (CustomResourceDefinition) specification. If the user deletes the VaultPolicyBinding CRD, then respective role will also be deleted from Vault.
apiVersion: policy.kubevault.com/v1alpha1 kind: VaultPolicyBinding metadata: name: &amp;lt;name&amp;gt; namespace: &amp;lt;namespace&amp;gt; spec: ... status: ... VaultPolicyBinding Spec VaultPolicyBinding spec contains information that necessary for creating Vault Kubernetes Role.
apiVersion: policy.kubevault.com/v1alpha1 kind: VaultPolicyBinding metadata: name: secret-admin namespace: demo spec: policies: [&amp;#34;secret-admin&amp;#34;] serviceAccountNames: [&amp;#34;sa1&amp;#34;,&amp;#34;sa2&amp;#34;] serviceAccountNamespaces: [&amp;#34;default&amp;#34;,&amp;#34;demo&amp;#34;] TTL: &amp;#34;1000&amp;#34; maxTTL: &amp;#34;2000&amp;#34; Period: &amp;#34;1000&amp;#34; VaultPolicyBinding Spec has following fields:</description></item><item><title>VaultPolicyBinding | KubeVault Concepts</title><link>https://kubevault.com/docs/v0.3.0/concepts/policy-crds/vaultpolicybinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/policy-crds/vaultpolicybinding/</guid><description>New to KubeVault? Please start here.
VaultPolicyBinding What is VaultPolicyBinding A VaultPolicyBinding is a Kubernetes CustomResourceDefinition (CRD) which binds Vault server policies to an auth method role in a Kubernetes native way.
When a VaultPolicyBinding is created, the KubeVault operator will create an auth role according to CRD (CustomResourceDefinition) specification. If the user deletes the VaultPolicyBinding CRD, then the respective role will also be deleted from Vault.
Auth method roles are associated with an authentication type/entity and a set of Vault policies.</description></item><item><title>VaultPolicyBinding | KubeVault Concepts</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/policy-crds/vaultpolicybinding/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/policy-crds/vaultpolicybinding/</guid><description>New to KubeVault? Please start here.
VaultPolicyBinding What is VaultPolicyBinding A VaultPolicyBinding is a Kubernetes CustomResourceDefinition (CRD) which binds Vault server policies to an auth method role in a Kubernetes native way.
When a VaultPolicyBinding is created, the KubeVault operator will create an auth role according to CRD (CustomResourceDefinition) specification. If the user deletes the VaultPolicyBinding CRD, then the respective role will also be deleted from Vault.
Auth method roles are associated with an authentication type/entity and a set of Vault policies.</description></item><item><title>Welcome | KubeVault</title><link>https://kubevault.com/docs/0.1.0/welcome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/welcome/</guid><description>KubeVault KubeVault by AppsCode is a collection of tools for running HashiCorp Vault on Kubernetes. You can deploy and mange Vault using Vault operator. Using Vault operator, you can deploy Vault for following storage backends:
Azure Storage DynamoDB Etcd GCS In Memory MySQL PosgreSQL AWS S3 Swift From here you can learn all about Vault operator&amp;rsquo;s architecture and how to deploy and use Vault operator.
Concepts. Concepts explain the CRDs (CustomResourceDefinition) used by Vault operator.</description></item><item><title>Welcome | KubeVault</title><link>https://kubevault.com/docs/0.2.0/welcome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/welcome/</guid><description>KubeVault KubeVault by AppsCode is a collection of tools for running HashiCorp Vault on Kubernetes. You can deploy and mange Vault using Vault operator. Using Vault operator, you can deploy Vault for following storage backends:
Azure Storage DynamoDB Etcd GCS In Memory MySQL PosgreSQL AWS S3 Swift From here you can learn all about Vault operator&amp;rsquo;s architecture and how to deploy and use Vault operator.
Concepts. Concepts explain the CRDs (CustomResourceDefinition) used by Vault operator.</description></item><item><title>Welcome | KubeVault</title><link>https://kubevault.com/docs/v0.3.0/welcome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/welcome/</guid><description>KubeVault KubeVault by AppsCode is a collection of tools for running HashiCorp Vault on Kubernetes.
Operator You can deploy and manage Vault on Kubernetes clusters using KubeVault operator. Using Vault operator, you can deploy Vault for following storage backends:
Azure Storage DynamoDB Etcd GCS In Memory MySQL PosgreSQL AWS S3 Swift Consul From here you can learn all about Vault operator&amp;rsquo;s architecture and how to deploy and use Vault operator.</description></item><item><title>Welcome | KubeVault</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/welcome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/welcome/</guid><description>KubeVault KubeVault by AppsCode is a collection of tools for running HashiCorp Vault on Kubernetes.
Operator You can deploy and manage Vault on Kubernetes clusters using KubeVault operator. Using Vault operator, you can deploy Vault for following storage backends:
Azure Storage DynamoDB Etcd GCS In Memory MySQL PosgreSQL AWS S3 Swift Consul From here you can learn all about Vault operator&amp;rsquo;s architecture and how to deploy and use Vault operator.</description></item><item><title>What is KubeVault</title><link>https://kubevault.com/docs/0.1.0/concepts/what-is-kubevault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.1.0/concepts/what-is-kubevault/</guid><description>New to KubeVault? Please start here.
What is KubeVault Vault operator is a Kubernetes controller for HashiCorp Vault. Vault is a tool for secrets management, encryption as a service, and privileged access management. Deploying, maintaining, and managing Vault in Kubernetes could be challenging. Vault operator eases these operational tasks so that developers can focus on solving business problems.
Why use KubeVault Vault operator makes it easy to deploy, maintain and manage Vault servers in Kubernetes.</description></item><item><title>What is KubeVault</title><link>https://kubevault.com/docs/0.2.0/concepts/what-is-kubevault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/0.2.0/concepts/what-is-kubevault/</guid><description>New to KubeVault? Please start here.
What is KubeVault Vault operator is a Kubernetes controller for HashiCorp Vault. Vault is a tool for secrets management, encryption as a service, and privileged access management. Deploying, maintaining, and managing Vault in Kubernetes could be challenging. Vault operator eases these operational tasks so that developers can focus on solving business problems.
Why use KubeVault Vault operator makes it easy to deploy, maintain and manage Vault servers in Kubernetes.</description></item><item><title>What is KubeVault</title><link>https://kubevault.com/docs/v0.3.0/concepts/what-is-kubevault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v0.3.0/concepts/what-is-kubevault/</guid><description>New to KubeVault? Please start here.
KubeVault What is KubeVault KubeVault operator is a Kubernetes controller for HashiCorp Vault. Vault is a tool for secrets management, encryption as a service, and privileged access management. Deploying, maintaining, and managing Vault in Kubernetes could be challenging. KubeVault operator eases these operational tasks so that developers can focus on solving business problems.
Why use KubeVault KubeVault operator makes it easy to deploy, maintain and manage Vault servers in Kubernetes.</description></item><item><title>What is KubeVault</title><link>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/what-is-kubevault/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kubevault.com/docs/v2020.07.09-beta.0/concepts/what-is-kubevault/</guid><description>New to KubeVault? Please start here.
KubeVault What is KubeVault KubeVault operator is a Kubernetes controller for HashiCorp Vault. Vault is a tool for secrets management, encryption as a service, and privileged access management. Deploying, maintaining, and managing Vault in Kubernetes could be challenging. KubeVault operator eases these operational tasks so that developers can focus on solving business problems.
Why use KubeVault KubeVault operator makes it easy to deploy, maintain and manage Vault servers in Kubernetes.</description></item></channel></rss>